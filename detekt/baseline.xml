<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ChainWrapping:com.wire.detekt.rules.EnforceSerializableFields.kt:39</ID>
    <ID>ChainWrapping:com.wire.detekt.rules.EnforceSerializableFields.kt:40</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.data.message.MessageEnvelope.kt:13</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.data.message.MessageEnvelope.kt:14</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.data.message.MessageEnvelope.kt:15</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.data.message.MessageEnvelope.kt:35</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.data.message.MessageEnvelope.kt:36</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.data.message.MessageRepository.kt:203</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.call.usecase.GetIncomingCallsUseCase.kt:71</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:177</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:178</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:179</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:210</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:211</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:215</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:219</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:223</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:224</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:225</ID>
    <ID>ChainWrapping:com.wire.kalium.logic.sync.ConversationEventReceiver.kt:279</ID>
    <ID>ClassNaming:Cryptobox.module_@wireapp_cryptobox.kt$T$0</ID>
    <ID>ClassNaming:Size_t.kt$Size_t : IntegerType</ID>
    <ID>ClassNaming:Uint32_t.kt$Uint32_t : IntegerType</ID>
    <ID>ClassNaming:messages.kt$ClientAction$RESET_SESSION : ClientAction</ID>
    <ID>ClassNaming:messages.kt$EncryptionAlgorithm$AES_CBC : EncryptionAlgorithm</ID>
    <ID>ClassNaming:messages.kt$EncryptionAlgorithm$AES_GCM : EncryptionAlgorithm</ID>
    <ID>ClassNaming:otr.kt$Priority$HIGH_PRIORITY : Priority</ID>
    <ID>ClassNaming:otr.kt$Priority$LOW_PRIORITY : Priority</ID>
    <ID>CommentSpacing:build.gradle.kts:33</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.call.CallClient.kt:17</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.call.CallRepository.kt:49</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.client.ClientModel.kt:12</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.conversation.ConversationMapper.kt:88</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.conversation.ConversationRepository.kt:197</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.conversation.ConversationRepository.kt:231</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.location.Location.kt:4</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.message.MessageRepository.kt:193</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.message.MessageRepository.kt:88</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.message.ProtoContentMapper.kt:92</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.notification.LocalNotification.kt:20</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.prekey.remote.PreKeyListMapper.kt:13</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.prekey.remote.PreKeyRemoteDataSource.kt:24</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.data.user.UserModel.kt:14</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.auth.LogoutUseCase.kt:27</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.auth.ValidateEmailUseCase.kt:22</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.auth.ValidatePasswordUseCase.kt:27</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.CallManagerImpl.kt:101</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.CallManagerImpl.kt:161</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.CallManagerImpl.kt:17</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.MediaManagerServiceImpl.kt:20</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnAnsweredCall.kt:9</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnCloseCall.kt:9</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnConfigRequest.kt:15</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnEstablishedCall.kt:9</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnHttpRequest.kt:20</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnIncomingCall.kt:16</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnMissedCall.kt:10</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnParticipantListChanged.kt:51</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnSFTRequest.kt:18</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.scenario.OnSendOTR.kt:18</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.usecase.GetIncomingCallsUseCase.kt:52</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.usecase.GetIncomingCallsUseCase.kt:61</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.usecase.GetIncomingCallsUseCase.kt:68</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.usecase.GetIncomingCallsUseCase.kt:70</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.call.usecase.UpdateVideoStateUseCase.kt:21</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.message.MessageSendFailureHandler.kt:28</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.message.MessageSendFailureHandler.kt:29</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.message.MessageSender.kt:146</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.feature.publicuser.GetKnownUserUseCase.kt:14</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.sync.ConversationEventReceiver.kt:44</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.sync.SyncManager.kt:70</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.sync.WorkSchedulerImpl.kt:58</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.sync.WorkSchedulerImpl.kt:65</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.sync.WorkSchedulerImpl.kt:72</ID>
    <ID>CommentSpacing:com.wire.kalium.logic.util.TimeParser.kt:10</ID>
    <ID>CommentSpacing:com.wire.kalium.network.api.message.EnvelopeProtoMapperImpl.kt:28</ID>
    <ID>CommentSpacing:com.wire.kalium.network.api.notification.NotificationApiImpl.kt:53</ID>
    <ID>CommentSpacing:com.wire.kalium.persistence.kmm_settings.KaliumPreferences.kt:49</ID>
    <ID>ComplexMethod:messages.kt$@Suppress("UNCHECKED_CAST") private fun GenericMessage.Companion.decodeWithImpl(u: pbandk.MessageDecoder): GenericMessage</ID>
    <ID>ComplexMethod:messages.kt$private fun Ephemeral.protoMergeImpl(plus: pbandk.Message?): Ephemeral</ID>
    <ID>ComplexMethod:messages.kt$private fun GenericMessage.protoMergeImpl(plus: pbandk.Message?): GenericMessage</ID>
    <ID>ComplexMethod:messages.kt$private fun LinkPreview.protoMergeImpl(plus: pbandk.Message?): LinkPreview</ID>
    <ID>ComplexMethod:otr.kt$private fun QualifiedNewOtrMessage.protoMergeImpl(plus: pbandk.Message?): QualifiedNewOtrMessage</ID>
    <ID>ConstructorParameterNaming:MessageApi.kt$MessageApi.Parameters.DefaultParameters$val `data`: String? = null</ID>
    <ID>ConstructorParameterNaming:MessageApi.kt$MessageApi.Parameters.QualifiedDefaultParameters$val `data`: String? = null</ID>
    <ID>EmptyDefaultConstructor:KaliumException.kt$KaliumException$()</ID>
    <ID>EmptyDefaultConstructor:KaliumException.kt$KaliumException.FeatureError$()</ID>
    <ID>EmptyDefaultConstructor:ServerConfigurationDAO.kt$ServerConfigMapper$()</ID>
    <ID>EmptyDefaultConstructor:ValidateSSOCodeUseCase.kt$ValidateSSOCodeUseCaseImpl$()</ID>
    <ID>EmptyKtFile:SessionLocalRepository.kt$.SessionLocalRepository.kt</ID>
    <ID>Filename:com.wire.kalium.logic.data.client.MLSClientProvider.kt:1</ID>
    <ID>Filename:com.wire.kalium.logic.data.conversation.ConversationStatus.kt:1</ID>
    <ID>Filename:com.wire.kalium.logic.feature.call.usecase.GetOngoingCallsUseCase.kt:1</ID>
    <ID>Filename:com.wire.kalium.logic.feature.session.SessionResult.kt:1</ID>
    <ID>Filename:com.wire.kalium.network.api.Handles.kt:1</ID>
    <ID>Filename:com.wire.kalium.network.api.RefreshToken.kt:1</ID>
    <ID>Filename:com.wire.kalium.network.api.notification.user.ClientEventsData.kt:1</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_answer(inst: Handle, conversationId: String, callType: Int, cbrEnabled: Boolean)</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_config_update(inst: Handle, error: Int, jsonString: String)</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_create( userId: String, clientId: String, readyHandler: ReadyHandler, sendHandler: SendHandler, sftRequestHandler: SFTRequestHandler, incomingCallHandler: IncomingCallHandler, missedCallHandler: MissedCallHandler, answeredCallHandler: AnsweredCallHandler, establishedCallHandler: EstablishedCallHandler, closeCallHandler: CloseCallHandler, metricsHandler: MetricsHandler, callConfigRequestHandler: CallConfigRequestHandler, constantBitRateStateChangeHandler: ConstantBitRateStateChangeHandler, videoReceiveStateHandler: VideoReceiveStateHandler, arg: Pointer? ): Handle</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_end(inst: Handle, conversationId: String)</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_init(env: Int): Int</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_library_version(): String</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_recv_msg( inst: Handle, msg: ByteArray, len: Int, curr_time: Uint32_t, msg_time: Uint32_t, convId: String, userId: String, clientId: String ): Int</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_reject(inst: Handle, conversationId: String)</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_resp( inst: Handle, status: Int, reason: String, arg: Pointer? ): Int</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_set_log_handler(logHandler: LogHandler, arg: Pointer?)</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_set_mute(inst: Handle, muted: Int)</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_set_participant_changed_handler( inst: Handle, wcall_participant_changed_h: ParticipantChangedHandler, arg: Pointer? )</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_sft_resp( inst: Handle, error: Int, data: ByteArray, length: Int, ctx: Pointer? )</ID>
    <ID>FunctionNaming:Calling.kt$Calling$fun wcall_start(inst: Handle, conversationId: String, callType: Int, convType: Int, audioCbr: Int): Int</ID>
    <ID>FunctionNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open fun get_prekey_bundle(preKeyId: Number = definedExternally): Promise&lt;PreKeyBundle></ID>
    <ID>FunctionNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open fun get_serialized_last_resort_prekey(): Promise&lt;`T$0`></ID>
    <ID>FunctionNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open fun get_serialized_standard_prekeys(): Promise&lt;Array&lt;`T$0`>></ID>
    <ID>FunctionNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open fun new_prekeys(start: Number, size: Number): Promise&lt;Array&lt;PreKey>></ID>
    <ID>FunctionNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open fun serialize_prekey(prekey: PreKey): `T$0`</ID>
    <ID>FunctionNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open fun session_delete(sessionId: String): Promise&lt;String></ID>
    <ID>FunctionNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open fun session_from_prekey(sessionId: String, preKeyBundle: ArrayBuffer): Promise&lt;CryptoboxSession></ID>
    <ID>FunctionNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open fun session_load(sessionId: String): Promise&lt;CryptoboxSession></ID>
    <ID>FunctionNaming:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$open fun delete_all(): Promise&lt;Boolean></ID>
    <ID>FunctionNaming:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$open fun load_identity(): Promise&lt;IdentityKeyPair?></ID>
    <ID>FunctionNaming:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$open fun load_prekeys(): Promise&lt;Array&lt;PreKey>></ID>
    <ID>FunctionNaming:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$open fun save_identity(identity: IdentityKeyPair): Promise&lt;IdentityKeyPair></ID>
    <ID>FunctionNaming:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$open fun save_prekey(preKey: PreKey): Promise&lt;PreKey></ID>
    <ID>FunctionNaming:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$open fun save_prekeys(preKeys: Array&lt;PreKey>): Promise&lt;Array&lt;PreKey>></ID>
    <ID>FunctionNaming:CryptoboxSession.module_@wireapp_cryptobox.kt$CryptoboxSession$open fun fingerprint_local(): String</ID>
    <ID>FunctionNaming:CryptoboxSession.module_@wireapp_cryptobox.kt$CryptoboxSession$open fun fingerprint_remote(): String</ID>
    <ID>FunctionNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open fun array_begin(): Encoder</ID>
    <ID>FunctionNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open fun array_end(): Encoder</ID>
    <ID>FunctionNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open fun get_buffer(): ArrayBuffer</ID>
    <ID>FunctionNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open fun object_begin(): Encoder</ID>
    <ID>FunctionNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open fun object_end(): Encoder</ID>
    <ID>FunctionNaming:KeyPair.module_@wireapp_proteus.kt$KeyPair.Companion$fun construct_private_key(ed25519_key_pair: KeyPair): SecretKey</ID>
    <ID>FunctionNaming:KeyPair.module_@wireapp_proteus.kt$KeyPair.Companion$fun construct_public_key(ed25519_key_pair: KeyPair): PublicKey</ID>
    <ID>FunctionNaming:PreKey.module_@wireapp_proteus.kt$PreKey.Companion$fun generate_prekeys(start: Number, size: Number): Array&lt;PreKey></ID>
    <ID>FunctionNaming:PreKey.module_@wireapp_proteus.kt$PreKey.Companion$fun last_resort(): PreKey</ID>
    <ID>FunctionNaming:PreKeyBundle.module_@wireapp_proteus.kt$PreKeyBundle$open fun serialised_json(): SerialisedJSON</ID>
    <ID>FunctionNaming:PreKeyStore.module_@wireapp_proteus.kt$PreKeyStore$open fun delete_prekey(prekeyId: Number): Promise&lt;Number></ID>
    <ID>FunctionNaming:PreKeyStore.module_@wireapp_proteus.kt$PreKeyStore$open fun load_prekey(prekeyId: Number): Promise&lt;PreKey?></ID>
    <ID>FunctionNaming:SecretKey.module_@wireapp_proteus.kt$SecretKey.Companion$fun shared_secret(publicKey: PublicKey, secretKey: SecretKey): Uint8Array</ID>
    <ID>FunctionNaming:UserRepository.kt$UserDataSource$private suspend fun _getSelfUserId(): QualifiedIDEntity</ID>
    <ID>FunctionParameterNaming:Calling.kt$Calling$curr_time: Uint32_t</ID>
    <ID>FunctionParameterNaming:Calling.kt$Calling$msg_time: Uint32_t</ID>
    <ID>FunctionParameterNaming:Calling.kt$Calling$wcall_participant_changed_h: ParticipantChangedHandler</ID>
    <ID>FunctionParameterNaming:CryptoboxSession.module_@wireapp_cryptobox.kt$CryptoboxSession$pk_store: CryptoboxCRUDStore</ID>
    <ID>FunctionParameterNaming:KeyPair.module_@wireapp_proteus.kt$KeyPair.Companion$ed25519_key_pair: KeyPair</ID>
    <ID>FunctionParameterNaming:SetUserHandleUseCase.kt$SetUserHandleUseCase$_handle: String</ID>
    <ID>LongParameterList:Calling.kt$Calling$( inst: Handle, msg: ByteArray, len: Int, curr_time: Uint32_t, msg_time: Uint32_t, convId: String, userId: String, clientId: String )</ID>
    <ID>LongParameterList:Calling.kt$Calling$( userId: String, clientId: String, readyHandler: ReadyHandler, sendHandler: SendHandler, sftRequestHandler: SFTRequestHandler, incomingCallHandler: IncomingCallHandler, missedCallHandler: MissedCallHandler, answeredCallHandler: AnsweredCallHandler, establishedCallHandler: EstablishedCallHandler, closeCallHandler: CloseCallHandler, metricsHandler: MetricsHandler, callConfigRequestHandler: CallConfigRequestHandler, constantBitRateStateChangeHandler: ConstantBitRateStateChangeHandler, videoReceiveStateHandler: VideoReceiveStateHandler, arg: Pointer? )</ID>
    <ID>LongParameterList:CloseCallHandler.kt$CloseCallHandler$( reason: Int, conversationId: String, messageTime: Uint32_t, userId: String, clientId: String, arg: Pointer? )</ID>
    <ID>LongParameterList:ConnectionRepository.kt$ConnectionDataSource$( private val conversationDAO: ConversationDAO, private val connectionDAO: ConnectionDAO, private val connectionApi: ConnectionApi, private val userDetailsApi: UserDetailsApi, private val userDAO: UserDAO, private val idMapper: IdMapper = MapperProvider.idMapper(), private val connectionStatusMapper: ConnectionStatusMapper = MapperProvider.connectionStatusMapper(), private val connectionMapper: ConnectionMapper = MapperProvider.connectionMapper(), private val publicUserMapper: PublicUserMapper = MapperProvider.publicUserMapper(), )</ID>
    <ID>LongParameterList:ConversationRepository.kt$ConversationDataSource$( private val userRepository: UserRepository, private val mlsConversationRepository: MLSConversationRepository, private val conversationDAO: ConversationDAO, private val conversationApi: ConversationApi, private val clientApi: ClientApi, private val idMapper: IdMapper = MapperProvider.idMapper(), private val conversationMapper: ConversationMapper = MapperProvider.conversationMapper(), private val memberMapper: MemberMapper = MapperProvider.memberMapper(), private val conversationStatusMapper: ConversationStatusMapper = MapperProvider.conversationStatusMapper() )</ID>
    <ID>LongParameterList:IncomingCallHandler.kt$IncomingCallHandler$( conversationId: String, messageTime: Uint32_t, userId: String, clientId: String, isVideoCall: Boolean, shouldRing: Boolean, conversationType: Int, arg: Pointer? )</ID>
    <ID>LongParameterList:MessageScope.kt$MessageScope$( internal val messageRepository: MessageRepository, private val conversationRepository: ConversationRepository, private val clientRepository: ClientRepository, private val proteusClient: ProteusClient, private val mlsClientProvider: MLSClientProvider, private val preKeyRepository: PreKeyRepository, private val userRepository: UserRepository, private val assetRepository: AssetRepository, private val syncManager: SyncManager, private val messageSendingScheduler: MessageSendingScheduler, private val timeParser: TimeParser, )</ID>
    <ID>LongParameterList:MessageSender.kt$MessageSenderImpl$( private val messageRepository: MessageRepository, private val conversationRepository: ConversationRepository, private val syncManager: SyncManager, private val messageSendFailureHandler: MessageSendFailureHandler, private val sessionEstablisher: SessionEstablisher, private val messageEnvelopeCreator: MessageEnvelopeCreator, private val mlsMessageCreator: MLSMessageCreator, private val messageSendingScheduler: MessageSendingScheduler, private val timeParser: TimeParser )</ID>
    <ID>LongParameterList:MessageSenderTest.kt$MessageSenderTest$( getMessageById: Boolean = true, getConversationProtocol: Boolean = true, getConversationsRecipient: Boolean = true, prepareRecipientsForNewOutGoingMessage: Boolean = true, createOutgoingEnvelope: Boolean = true, updateMessageDate: Boolean = true, updatePendingMessagesAddMillisToDate: Boolean = true, sendEnvelope: Either&lt;CoreFailure, String> = Either.Right("date"), updateMessageStatus: Boolean = true, )</ID>
    <ID>LongParameterList:NetworkQualityChangedHandler.kt$NetworkQualityChangedHandler$( conversationId: String, userId: String, clientId: String, quality: Int, roundTripTimeInMilliseconds: Int, upstreamPacketLossPercentage: Int, downstreamPacketLossPercentage: Int, arg: Pointer? )</ID>
    <ID>LongParameterList:RegisterAccountUseCase.kt$RegisterParam.Team$( firstName: String, lastName: String, email: String, password: String, val emailActivationCode: String, val teamName: String, val teamIcon: String )</ID>
    <ID>LongParameterList:SendHandler.kt$SendHandler$( context: Pointer?, conversationId: String, userIdSelf: String, clientIdSelf: String, userIdDestination: String?, clientIdDestination: String?, data: Pointer?, length: Size_t, isTransient: Boolean, arg: Pointer? )</ID>
    <ID>MagicNumber:AESUtils.kt$AESDecrypt$16</ID>
    <ID>MagicNumber:AESUtils.kt$AESEncrypt$256</ID>
    <ID>MagicNumber:CLIUtils.kt$CLIUtils$1024</ID>
    <ID>MagicNumber:CLIUtils.kt$CLIUtils$16</ID>
    <ID>MagicNumber:CLIUtils.kt$CLIUtils$4</ID>
    <ID>MagicNumber:CallManagerImpl.kt$CallManagerImpl$1000</ID>
    <ID>MagicNumber:ConversationApiImpl.kt$ConversationApiImpl$200</ID>
    <ID>MagicNumber:ConversationApiImpl.kt$ConversationApiImpl$204</ID>
    <ID>MagicNumber:ConversationResponse.kt$ConversationResponse.Type.INCOMING_CONNECTION$4</ID>
    <ID>MagicNumber:ConversationResponse.kt$ConversationResponse.Type.WAIT_FOR_CONNECTION$3</ID>
    <ID>MagicNumber:ConversationStatus.kt$MutedConversationStatus.AllMuted$3</ID>
    <ID>MagicNumber:CustomErrors.kt$CustomErrors$500</ID>
    <ID>MagicNumber:GlobalCallManager.kt$LogHandlerImpl$3</ID>
    <ID>MagicNumber:HttpEngine.kt$401</ID>
    <ID>MagicNumber:MLSClientImpl.kt$MLSClientImpl$30</ID>
    <ID>MagicNumber:NetworkUtils.kt$300</ID>
    <ID>MagicNumber:NetworkUtils.kt$399</ID>
    <ID>MagicNumber:NetworkUtils.kt$400</ID>
    <ID>MagicNumber:NetworkUtils.kt$499</ID>
    <ID>MagicNumber:NetworkUtils.kt$500</ID>
    <ID>MagicNumber:NetworkUtils.kt$599</ID>
    <ID>MagicNumber:NotificationApiImpl.kt$NotificationApiImpl$404</ID>
    <ID>MagicNumber:ProteusClientImpl.kt$ProteusClientImpl$65535</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$13</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$14</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$15</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$3</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$4</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$5</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$6</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$7</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$8</ID>
    <ID>MagicNumber:ProteusException.kt$ProteusException.Companion$9</ID>
    <ID>MagicNumber:messages.kt$10</ID>
    <ID>MagicNumber:messages.kt$11</ID>
    <ID>MagicNumber:messages.kt$12</ID>
    <ID>MagicNumber:messages.kt$13</ID>
    <ID>MagicNumber:messages.kt$14</ID>
    <ID>MagicNumber:messages.kt$15</ID>
    <ID>MagicNumber:messages.kt$16</ID>
    <ID>MagicNumber:messages.kt$17</ID>
    <ID>MagicNumber:messages.kt$18</ID>
    <ID>MagicNumber:messages.kt$19</ID>
    <ID>MagicNumber:messages.kt$20</ID>
    <ID>MagicNumber:messages.kt$21</ID>
    <ID>MagicNumber:messages.kt$22</ID>
    <ID>MagicNumber:messages.kt$23</ID>
    <ID>MagicNumber:messages.kt$3</ID>
    <ID>MagicNumber:messages.kt$4</ID>
    <ID>MagicNumber:messages.kt$5</ID>
    <ID>MagicNumber:messages.kt$6</ID>
    <ID>MagicNumber:messages.kt$7</ID>
    <ID>MagicNumber:messages.kt$8</ID>
    <ID>MagicNumber:messages.kt$9</ID>
    <ID>MagicNumber:messages.kt$Article.Companion$4</ID>
    <ID>MagicNumber:messages.kt$Asset.Companion$6</ID>
    <ID>MagicNumber:messages.kt$Asset.ImageMetaData.Companion$3</ID>
    <ID>MagicNumber:messages.kt$Asset.Original.Companion$8</ID>
    <ID>MagicNumber:messages.kt$Asset.Preview.Companion$4</ID>
    <ID>MagicNumber:messages.kt$Asset.RemoteData.Companion$6</ID>
    <ID>MagicNumber:messages.kt$Asset.VideoMetaData.Companion$3</ID>
    <ID>MagicNumber:messages.kt$Availability.Type.BUSY$3</ID>
    <ID>MagicNumber:messages.kt$Cleared.Companion$3</ID>
    <ID>MagicNumber:messages.kt$Composite.Companion$3</ID>
    <ID>MagicNumber:messages.kt$Confirmation.Companion$3</ID>
    <ID>MagicNumber:messages.kt$Ephemeral.Companion$6</ID>
    <ID>MagicNumber:messages.kt$External.Companion$3</ID>
    <ID>MagicNumber:messages.kt$GenericMessage.Companion$22</ID>
    <ID>MagicNumber:messages.kt$ImageAsset.Companion$11</ID>
    <ID>MagicNumber:messages.kt$Knock.Companion$3</ID>
    <ID>MagicNumber:messages.kt$LastRead.Companion$3</ID>
    <ID>MagicNumber:messages.kt$LinkPreview.Companion$8</ID>
    <ID>MagicNumber:messages.kt$Location.Companion$6</ID>
    <ID>MagicNumber:messages.kt$Mention.Companion$4</ID>
    <ID>MagicNumber:messages.kt$MessageEdit.Companion$3</ID>
    <ID>MagicNumber:messages.kt$MessageHide.Companion$3</ID>
    <ID>MagicNumber:messages.kt$Reaction.Companion$3</ID>
    <ID>MagicNumber:messages.kt$Text.Companion$6</ID>
    <ID>MagicNumber:otr.kt$10</ID>
    <ID>MagicNumber:otr.kt$3</ID>
    <ID>MagicNumber:otr.kt$4</ID>
    <ID>MagicNumber:otr.kt$5</ID>
    <ID>MagicNumber:otr.kt$6</ID>
    <ID>MagicNumber:otr.kt$7</ID>
    <ID>MagicNumber:otr.kt$8</ID>
    <ID>MagicNumber:otr.kt$9</ID>
    <ID>MagicNumber:otr.kt$NewOtrMessage.Companion$7</ID>
    <ID>MagicNumber:otr.kt$OtrAssetMeta.Companion$4</ID>
    <ID>MagicNumber:otr.kt$QualifiedNewOtrMessage.Companion$10</ID>
    <ID>MatchingDeclarationName:ClientEventsData.kt$NewClientEventData</ID>
    <ID>MatchingDeclarationName:ConversationStatus.kt$MutedConversationStatus</ID>
    <ID>MatchingDeclarationName:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore : PreKeyStore</ID>
    <ID>MatchingDeclarationName:CryptoboxSession.module_@wireapp_cryptobox.kt$CryptoboxSession</ID>
    <ID>MatchingDeclarationName:Encoder.module_@wireapp_cbor.kt$Encoder</ID>
    <ID>MatchingDeclarationName:GetOngoingCallsUseCase.kt$GetOngoingCallUseCase</ID>
    <ID>MatchingDeclarationName:Handles.kt$QualifiedHandle</ID>
    <ID>MatchingDeclarationName:IDSample.kt$QualifiedIDSamples</ID>
    <ID>MatchingDeclarationName:IdentityKey.module_@wireapp_proteus.kt$IdentityKey</ID>
    <ID>MatchingDeclarationName:IdentityKeyPair.module_@wireapp_proteus.kt$IdentityKeyPair</ID>
    <ID>MatchingDeclarationName:KeyPair.module_@wireapp_proteus.kt$KeyPair</ID>
    <ID>MatchingDeclarationName:MLSClientProvider.kt$MLSClientProviderImpl : MLSClientProvider</ID>
    <ID>MatchingDeclarationName:MemoryEngine.module_@wireapp_store-engine.kt$MemoryEngine : CRUDEngine</ID>
    <ID>MatchingDeclarationName:PreKey.module_@wireapp_proteus.kt$PreKey</ID>
    <ID>MatchingDeclarationName:PreKeyStore.module_@wireapp_proteus.kt$PreKeyStore</ID>
    <ID>MatchingDeclarationName:PublicKey.module_@wireapp_proteus.kt$PublicKey</ID>
    <ID>MatchingDeclarationName:QualifiedId.kt$QualifiedID</ID>
    <ID>MatchingDeclarationName:RefreshToken.kt$RefreshTokenProperties</ID>
    <ID>MatchingDeclarationName:RemotePrekeyListMapperTest.kt$PreKeyListMapperTest</ID>
    <ID>MatchingDeclarationName:SecretKey.module_@wireapp_proteus.kt$SecretKey</ID>
    <ID>MatchingDeclarationName:SessionResult.kt$GetAllSessionsResult</ID>
    <ID>MatchingDeclarationName:SessionStorageTest.kt$SessionDAOTest</ID>
    <ID>MaxLineLength:ClientDAOImpl.kt$ClientDAOImpl$override suspend fun deleteClientsOfUserByQualifiedID(qualifiedID: QualifiedIDEntity): Unit</ID>
    <ID>MaxLineLength:ClientMapper.kt$ClientMapper$capabilities</ID>
    <ID>MaxLineLength:ConversationApiImpl.kt$ConversationApiImpl$override suspend</ID>
    <ID>MaxLineLength:ConversationDAOImpl.kt$ConversationDAOImpl$if (conversationEntity.protocolInfo is ConversationEntity.ProtocolInfo.MLS) ConversationEntity.Protocol.MLS else ConversationEntity.Protocol.PROTEUS</ID>
    <ID>MaxLineLength:ConversationDAOImpl.kt$ConversationDAOImpl$if (conversationEntity.protocolInfo is ConversationEntity.ProtocolInfo.MLS) conversationEntity.protocolInfo.groupState else ConversationEntity.GroupState.ESTABLISHED</ID>
    <ID>MaxLineLength:ConversationEvent.kt$ConversationMember$@SerialName("conversation_role") val conversationRole: String?</ID>
    <ID>MaxLineLength:ConversationEvent.kt$ConversationMembers$@SerialName("user_ids") val userIds: List&lt;String></ID>
    <ID>MaxLineLength:ConversationEvent.kt$ConversationUsers$@SerialName("user_ids") val userIds: List&lt;String></ID>
    <ID>MaxLineLength:ConversationRepository.kt$ConversationDataSource$is ProtocolInfo.MLS</ID>
    <ID>MaxLineLength:IdentityKeyPair.module_@wireapp_proteus.kt$IdentityKeyPair$external open</ID>
    <ID>MaxLineLength:LocalNotification.kt$LocalNotificationMessage.Comment$data</ID>
    <ID>MaxLineLength:MemoryEngine.module_@wireapp_store-engine.kt$MemoryEngine$override fun &lt;PrimaryKey, ChangesType> updateOrCreate(tableName: String, primaryKey: PrimaryKey, changes: ChangesType): Promise&lt;PrimaryKey></ID>
    <ID>MaxLineLength:MessageEnvelopeCreatorTest.kt$MessageEnvelopeCreatorTest$.</ID>
    <ID>MaxLineLength:MessageSenderTest.kt$MessageSenderTest$.</ID>
    <ID>MaxLineLength:PreKeyBundle.module_@wireapp_proteus.kt$PreKeyBundle$constructor(publicIdentityKey: IdentityKey, preKeyId: Number, publicKey: PublicKey, signature: Uint8Array? = definedExternally, version: Number = definedExternally)</ID>
    <ID>MaxLineLength:PreKeyListMapper.kt$PreKeyListMapper$fun</ID>
    <ID>MaxLineLength:ProtoContentMapper.kt$ProtoContentMapperImpl$// Backend sends some preview asset messages just with img metadata and no keys or asset id, so we need to overwrite one with the other one</ID>
    <ID>MaxLineLength:SaveSessionUseCase.kt$SaveSessionUseCase$@Deprecated("unsafe API", replaceWith = ReplaceWith("com.wire.kalium.logic.feature.auth.AddAuthenticatedUserUseCase", "com.wire.kalium.logic.feature.auth.AddAuthenticatedUserUseCase"))</ID>
    <ID>MaxLineLength:SendAssetMessageUseCaseTest.kt$SendAssetMessageUseCaseTest$"some VERY long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long asset".toByteArray()</ID>
    <ID>MaxLineLength:SessionEstablisher.kt$SessionEstablisherImpl$private</ID>
    <ID>MaxLineLength:SessionEstablisherTest.kt$SessionEstablisherTest$val cryptoSessionId = CryptoSessionId(CryptoUserID(TEST_USER_ID_1.value, TEST_USER_ID_1.domain), CryptoClientId(clientPreKeyInfo.clientId))</ID>
    <ID>MaxLineLength:TestCredentials.kt$accessToken = "eyJhbGciOiJIUzI1AnwarInR5cCI6IkpXVCJ9.eyJsb2dnZWRJbkFzIjoiYWRtaW4iLCJpYXQiOjE0MjI3Nzk2Mz69.gzSraSYS8EXBxLN_oWnFSRgCzcmJmMjLiuyu5CSpyHI"</ID>
    <ID>MaxLineLength:TestCredentials.kt$refreshToken = "a123bGciOiJIUzI1NiIsInR5cCI6IkpX2fr9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ik420G4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"</ID>
    <ID>MaxLineLength:UserDTO.kt$NewUserDTO$@SerialName("label") val label: String?</ID>
    <ID>MaxLineLength:WrapApiRequestTest.kt$WrapApiRequestTest$val expected = NetworkResponse.Error(KaliumException.ServerError(ErrorResponse(500, "have you tried turning it off and on again?", "server_crash")))</ID>
    <ID>MaxLineLength:messages.kt$1 -> items = (items ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.messages.Composite.Item> }</ID>
    <ID>MaxLineLength:messages.kt$22 -> content = GenericMessage.Content.ButtonActionConfirmation(_fieldValue as com.wire.kalium.protobuf.messages.ButtonActionConfirmation)</ID>
    <ID>MaxLineLength:messages.kt$3 -> linkPreview = (linkPreview ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.messages.LinkPreview> }</ID>
    <ID>MaxLineLength:messages.kt$4 -> mentions = (mentions ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.messages.Mention> }</ID>
    <ID>MaxLineLength:messages.kt$Article.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Article</ID>
    <ID>MaxLineLength:messages.kt$Asset.AudioMetaData$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.messages.Asset.AudioMetaData> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:messages.kt$Asset.AudioMetaData.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Asset.AudioMetaData</ID>
    <ID>MaxLineLength:messages.kt$Asset.AudioMetaData.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Asset.AudioMetaData by lazy { com.wire.kalium.protobuf.messages.Asset.AudioMetaData() }</ID>
    <ID>MaxLineLength:messages.kt$Asset.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Asset</ID>
    <ID>MaxLineLength:messages.kt$Asset.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.Asset.NotUploaded.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.LegalHoldStatus.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Asset.Original.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Asset.Preview.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Asset.RemoteData.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Asset.ImageMetaData$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.messages.Asset.ImageMetaData> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:messages.kt$Asset.ImageMetaData.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Asset.ImageMetaData</ID>
    <ID>MaxLineLength:messages.kt$Asset.ImageMetaData.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Asset.ImageMetaData by lazy { com.wire.kalium.protobuf.messages.Asset.ImageMetaData() }</ID>
    <ID>MaxLineLength:messages.kt$Asset.NotUploaded.Companion$override fun fromName(name: String): Asset.NotUploaded</ID>
    <ID>MaxLineLength:messages.kt$Asset.Original.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Asset.Original</ID>
    <ID>MaxLineLength:messages.kt$Asset.Original.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Asset.Original by lazy { com.wire.kalium.protobuf.messages.Asset.Original() }</ID>
    <ID>MaxLineLength:messages.kt$Asset.Original.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Asset.AudioMetaData.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Original.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Asset.ImageMetaData.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Original.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Asset.VideoMetaData.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Original.MetaData$Audio : MetaData</ID>
    <ID>MaxLineLength:messages.kt$Asset.Original.MetaData$Image : MetaData</ID>
    <ID>MaxLineLength:messages.kt$Asset.Original.MetaData$Video : MetaData</ID>
    <ID>MaxLineLength:messages.kt$Asset.Preview.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Asset.Preview</ID>
    <ID>MaxLineLength:messages.kt$Asset.Preview.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Asset.Preview by lazy { com.wire.kalium.protobuf.messages.Asset.Preview() }</ID>
    <ID>MaxLineLength:messages.kt$Asset.Preview.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Asset.ImageMetaData.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Preview.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Asset.RemoteData.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Preview.MetaData$Image : MetaData</ID>
    <ID>MaxLineLength:messages.kt$Asset.RemoteData.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Asset.RemoteData</ID>
    <ID>MaxLineLength:messages.kt$Asset.RemoteData.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Asset.RemoteData by lazy { com.wire.kalium.protobuf.messages.Asset.RemoteData() }</ID>
    <ID>MaxLineLength:messages.kt$Asset.RemoteData.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.EncryptionAlgorithm.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$Asset.Status$NotUploaded : Status</ID>
    <ID>MaxLineLength:messages.kt$Asset.Status$Uploaded : Status</ID>
    <ID>MaxLineLength:messages.kt$Asset.VideoMetaData$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.messages.Asset.VideoMetaData> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:messages.kt$Asset.VideoMetaData.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Asset.VideoMetaData</ID>
    <ID>MaxLineLength:messages.kt$Asset.VideoMetaData.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Asset.VideoMetaData by lazy { com.wire.kalium.protobuf.messages.Asset.VideoMetaData() }</ID>
    <ID>MaxLineLength:messages.kt$Availability.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Availability</ID>
    <ID>MaxLineLength:messages.kt$Availability.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Availability by lazy { com.wire.kalium.protobuf.messages.Availability() }</ID>
    <ID>MaxLineLength:messages.kt$Availability.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.Availability.Type.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Availability.Type.Companion$override fun fromName(name: String): Availability.Type</ID>
    <ID>MaxLineLength:messages.kt$Button.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Button</ID>
    <ID>MaxLineLength:messages.kt$ButtonAction.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.ButtonAction</ID>
    <ID>MaxLineLength:messages.kt$ButtonAction.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.ButtonAction by lazy { com.wire.kalium.protobuf.messages.ButtonAction() }</ID>
    <ID>MaxLineLength:messages.kt$ButtonActionConfirmation$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.messages.ButtonActionConfirmation> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:messages.kt$ButtonActionConfirmation.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.ButtonActionConfirmation</ID>
    <ID>MaxLineLength:messages.kt$ButtonActionConfirmation.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.ButtonActionConfirmation by lazy { com.wire.kalium.protobuf.messages.ButtonActionConfirmation() }</ID>
    <ID>MaxLineLength:messages.kt$Calling.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Calling</ID>
    <ID>MaxLineLength:messages.kt$Cleared.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Cleared</ID>
    <ID>MaxLineLength:messages.kt$Cleared.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.QualifiedConversationId.Companion)</ID>
    <ID>MaxLineLength:messages.kt$ClientAction.Companion$override fun fromName(name: String): ClientAction</ID>
    <ID>MaxLineLength:messages.kt$Composite.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Composite</ID>
    <ID>MaxLineLength:messages.kt$Composite.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.LegalHoldStatus.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$Composite.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.messages.Composite.Item>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Composite.Item.Companion))</ID>
    <ID>MaxLineLength:messages.kt$Composite.Item.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Composite.Item</ID>
    <ID>MaxLineLength:messages.kt$Composite.Item.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Composite.Item by lazy { com.wire.kalium.protobuf.messages.Composite.Item() }</ID>
    <ID>MaxLineLength:messages.kt$Composite.Item.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Button.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Composite.Item.Content$Button : Content</ID>
    <ID>MaxLineLength:messages.kt$Confirmation.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Confirmation</ID>
    <ID>MaxLineLength:messages.kt$Confirmation.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.Confirmation by lazy { com.wire.kalium.protobuf.messages.Confirmation() }</ID>
    <ID>MaxLineLength:messages.kt$Confirmation.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.Confirmation.Type.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Confirmation.Type.Companion$override fun fromName(name: String): Confirmation.Type</ID>
    <ID>MaxLineLength:messages.kt$DataTransfer.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.DataTransfer</ID>
    <ID>MaxLineLength:messages.kt$DataTransfer.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.DataTransfer by lazy { com.wire.kalium.protobuf.messages.DataTransfer() }</ID>
    <ID>MaxLineLength:messages.kt$DataTransfer.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.TrackingIdentifier.Companion)</ID>
    <ID>MaxLineLength:messages.kt$EncryptionAlgorithm.Companion$override fun fromName(name: String): EncryptionAlgorithm</ID>
    <ID>MaxLineLength:messages.kt$Ephemeral.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Ephemeral</ID>
    <ID>MaxLineLength:messages.kt$Ephemeral.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.ImageAsset.Companion)</ID>
    <ID>MaxLineLength:messages.kt$Ephemeral.Content$Image : Content</ID>
    <ID>MaxLineLength:messages.kt$Ephemeral.Content$Location : Content</ID>
    <ID>MaxLineLength:messages.kt$External.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.External</ID>
    <ID>MaxLineLength:messages.kt$External.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.EncryptionAlgorithm.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.GenericMessage</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.GenericMessage by lazy { com.wire.kalium.protobuf.messages.GenericMessage() }</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.ClientAction.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Availability.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.ButtonAction.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.ButtonActionConfirmation.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Composite.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Confirmation.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.DataTransfer.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Ephemeral.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.ImageAsset.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.MessageDelete.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.MessageEdit.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.MessageHide.Companion)</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Availability : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$ButtonAction : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$ButtonActionConfirmation : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Calling : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Cleared : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$ClientAction : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Composite : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Confirmation : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$DataTransfer : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Deleted : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Edited : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Ephemeral : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$External : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Hidden : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Image : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$LastRead : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Location : Content</ID>
    <ID>MaxLineLength:messages.kt$GenericMessage.Content$Reaction : Content</ID>
    <ID>MaxLineLength:messages.kt$ImageAsset.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.ImageAsset</ID>
    <ID>MaxLineLength:messages.kt$Knock.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Knock</ID>
    <ID>MaxLineLength:messages.kt$Knock.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.LegalHoldStatus.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$LastRead.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.LastRead</ID>
    <ID>MaxLineLength:messages.kt$LastRead.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.QualifiedConversationId.Companion)</ID>
    <ID>MaxLineLength:messages.kt$LegalHoldStatus.Companion$override fun fromName(name: String): LegalHoldStatus</ID>
    <ID>MaxLineLength:messages.kt$LinkPreview.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.LinkPreview</ID>
    <ID>MaxLineLength:messages.kt$LinkPreview.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.LinkPreview by lazy { com.wire.kalium.protobuf.messages.LinkPreview() }</ID>
    <ID>MaxLineLength:messages.kt$LinkPreview.Preview$Article : Preview</ID>
    <ID>MaxLineLength:messages.kt$Location.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Location</ID>
    <ID>MaxLineLength:messages.kt$Location.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.LegalHoldStatus.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$Mention.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Mention</ID>
    <ID>MaxLineLength:messages.kt$Mention.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.QualifiedUserId.Companion)</ID>
    <ID>MaxLineLength:messages.kt$MessageDelete.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.MessageDelete</ID>
    <ID>MaxLineLength:messages.kt$MessageDelete.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.MessageDelete by lazy { com.wire.kalium.protobuf.messages.MessageDelete() }</ID>
    <ID>MaxLineLength:messages.kt$MessageEdit.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.MessageEdit</ID>
    <ID>MaxLineLength:messages.kt$MessageEdit.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.MessageEdit by lazy { com.wire.kalium.protobuf.messages.MessageEdit() }</ID>
    <ID>MaxLineLength:messages.kt$MessageEdit.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Composite.Companion)</ID>
    <ID>MaxLineLength:messages.kt$MessageEdit.Content$Composite : Content</ID>
    <ID>MaxLineLength:messages.kt$MessageHide.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.MessageHide</ID>
    <ID>MaxLineLength:messages.kt$MessageHide.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.MessageHide by lazy { com.wire.kalium.protobuf.messages.MessageHide() }</ID>
    <ID>MaxLineLength:messages.kt$MessageHide.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.QualifiedConversationId.Companion)</ID>
    <ID>MaxLineLength:messages.kt$QualifiedConversationId$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.messages.QualifiedConversationId> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:messages.kt$QualifiedConversationId.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.QualifiedConversationId</ID>
    <ID>MaxLineLength:messages.kt$QualifiedConversationId.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.QualifiedConversationId by lazy { com.wire.kalium.protobuf.messages.QualifiedConversationId() }</ID>
    <ID>MaxLineLength:messages.kt$QualifiedUserId.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.QualifiedUserId</ID>
    <ID>MaxLineLength:messages.kt$QualifiedUserId.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.QualifiedUserId by lazy { com.wire.kalium.protobuf.messages.QualifiedUserId() }</ID>
    <ID>MaxLineLength:messages.kt$Quote.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Quote</ID>
    <ID>MaxLineLength:messages.kt$Reaction.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Reaction</ID>
    <ID>MaxLineLength:messages.kt$Reaction.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.LegalHoldStatus.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$Text.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Text</ID>
    <ID>MaxLineLength:messages.kt$Text.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.messages.LegalHoldStatus.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:messages.kt$Text.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.messages.LinkPreview>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.LinkPreview.Companion))</ID>
    <ID>MaxLineLength:messages.kt$Text.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.messages.Mention>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.messages.Mention.Companion))</ID>
    <ID>MaxLineLength:messages.kt$TrackingIdentifier.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.TrackingIdentifier</ID>
    <ID>MaxLineLength:messages.kt$TrackingIdentifier.Companion$public val defaultInstance: com.wire.kalium.protobuf.messages.TrackingIdentifier by lazy { com.wire.kalium.protobuf.messages.TrackingIdentifier() }</ID>
    <ID>MaxLineLength:messages.kt$Tweet.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.messages.Tweet</ID>
    <ID>MaxLineLength:messages.kt$private</ID>
    <ID>MaxLineLength:messages.kt$public</ID>
    <ID>MaxLineLength:otr.kt$1 -> userIds = (userIds ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.otr.QualifiedUserId> }</ID>
    <ID>MaxLineLength:otr.kt$10 -> clientMismatchStrategy = QualifiedNewOtrMessage.ClientMismatchStrategy.IgnoreOnly(_fieldValue as com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreOnly)</ID>
    <ID>MaxLineLength:otr.kt$2 -> clients = (clients ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.otr.ClientEntry> }</ID>
    <ID>MaxLineLength:otr.kt$2 -> entries = (entries ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.otr.UserEntry> }</ID>
    <ID>MaxLineLength:otr.kt$2 -> recipients = (recipients ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.otr.QualifiedUserEntry> }</ID>
    <ID>MaxLineLength:otr.kt$2 -> recipients = (recipients ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.otr.UserEntry> }</ID>
    <ID>MaxLineLength:otr.kt$7 -> clientMismatchStrategy = QualifiedNewOtrMessage.ClientMismatchStrategy.ReportAll(_fieldValue as com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportAll)</ID>
    <ID>MaxLineLength:otr.kt$7 -> reportMissing = (reportMissing ?: pbandk.ListWithSize.Builder()).apply { this += _fieldValue as Sequence&lt;com.wire.kalium.protobuf.otr.UserId> }</ID>
    <ID>MaxLineLength:otr.kt$8 -> clientMismatchStrategy = QualifiedNewOtrMessage.ClientMismatchStrategy.IgnoreAll(_fieldValue as com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreAll)</ID>
    <ID>MaxLineLength:otr.kt$9 -> clientMismatchStrategy = QualifiedNewOtrMessage.ClientMismatchStrategy.ReportOnly(_fieldValue as com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportOnly)</ID>
    <ID>MaxLineLength:otr.kt$ClientEntry.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.ClientEntry</ID>
    <ID>MaxLineLength:otr.kt$ClientId.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.ClientId</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.ClientMismatchStrategy</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.Companion$public val defaultInstance: com.wire.kalium.protobuf.otr.ClientMismatchStrategy by lazy { com.wire.kalium.protobuf.otr.ClientMismatchStrategy() }</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreAll$override operator fun plus(other: pbandk.Message?): com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreAll</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreAll$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreAll> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreAll.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreAll</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreAll.Companion$public val defaultInstance: com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreAll by lazy { com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreAll() }</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreOnly$override operator fun plus(other: pbandk.Message?): com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreOnly</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreOnly$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreOnly> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreOnly.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreOnly</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreOnly.Companion$public val defaultInstance: com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreOnly by lazy { com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreOnly() }</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.IgnoreOnly.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.otr.QualifiedUserId>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.QualifiedUserId.Companion))</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportAll$override operator fun plus(other: pbandk.Message?): com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportAll</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportAll$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportAll> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportAll.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportAll</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportAll.Companion$public val defaultInstance: com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportAll by lazy { com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportAll() }</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportOnly$override operator fun plus(other: pbandk.Message?): com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportOnly</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportOnly$override val descriptor: pbandk.MessageDescriptor&lt;com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportOnly> get() = Companion.descriptor</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportOnly.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportOnly</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportOnly.Companion$public val defaultInstance: com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportOnly by lazy { com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportOnly() }</ID>
    <ID>MaxLineLength:otr.kt$ClientMismatchStrategy.ReportOnly.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.otr.QualifiedUserId>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.QualifiedUserId.Companion))</ID>
    <ID>MaxLineLength:otr.kt$NewOtrMessage.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.NewOtrMessage</ID>
    <ID>MaxLineLength:otr.kt$NewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.otr.Priority.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:otr.kt$NewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.otr.UserEntry>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.UserEntry.Companion))</ID>
    <ID>MaxLineLength:otr.kt$NewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.otr.UserId>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.UserId.Companion))</ID>
    <ID>MaxLineLength:otr.kt$OtrAssetMeta.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.OtrAssetMeta</ID>
    <ID>MaxLineLength:otr.kt$OtrAssetMeta.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.otr.UserEntry>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.UserEntry.Companion))</ID>
    <ID>MaxLineLength:otr.kt$Priority.Companion$override fun fromName(name: String): Priority</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.ClientMismatchStrategy$IgnoreAll : ClientMismatchStrategy</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.ClientMismatchStrategy$IgnoreOnly : ClientMismatchStrategy</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.ClientMismatchStrategy$ReportAll : ClientMismatchStrategy</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.ClientMismatchStrategy$ReportOnly : ClientMismatchStrategy</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.QualifiedNewOtrMessage</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.Companion$public val defaultInstance: com.wire.kalium.protobuf.otr.QualifiedNewOtrMessage by lazy { com.wire.kalium.protobuf.otr.QualifiedNewOtrMessage() }</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Enum(enumCompanion = com.wire.kalium.protobuf.otr.Priority.Companion, hasPresence = true)</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreAll.Companion)</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.ClientMismatchStrategy.IgnoreOnly.Companion)</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportAll.Companion)</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.ClientMismatchStrategy.ReportOnly.Companion)</ID>
    <ID>MaxLineLength:otr.kt$QualifiedNewOtrMessage.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.otr.QualifiedUserEntry>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.QualifiedUserEntry.Companion))</ID>
    <ID>MaxLineLength:otr.kt$QualifiedUserEntry.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.QualifiedUserEntry</ID>
    <ID>MaxLineLength:otr.kt$QualifiedUserEntry.Companion$public val defaultInstance: com.wire.kalium.protobuf.otr.QualifiedUserEntry by lazy { com.wire.kalium.protobuf.otr.QualifiedUserEntry() }</ID>
    <ID>MaxLineLength:otr.kt$QualifiedUserEntry.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.otr.UserEntry>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.UserEntry.Companion))</ID>
    <ID>MaxLineLength:otr.kt$QualifiedUserId.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.QualifiedUserId</ID>
    <ID>MaxLineLength:otr.kt$UserEntry.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.UserEntry</ID>
    <ID>MaxLineLength:otr.kt$UserEntry.Companion$type = pbandk.FieldDescriptor.Type.Repeated&lt;com.wire.kalium.protobuf.otr.ClientEntry>(valueType = pbandk.FieldDescriptor.Type.Message(messageCompanion = com.wire.kalium.protobuf.otr.ClientEntry.Companion))</ID>
    <ID>MaxLineLength:otr.kt$UserId.Companion$override fun decodeWith(u: pbandk.MessageDecoder): com.wire.kalium.protobuf.otr.UserId</ID>
    <ID>MaxLineLength:otr.kt$clientMismatchStrategy is QualifiedNewOtrMessage.ClientMismatchStrategy.IgnoreAll &amp;&amp; plus.clientMismatchStrategy is QualifiedNewOtrMessage.ClientMismatchStrategy.IgnoreAll</ID>
    <ID>MaxLineLength:otr.kt$clientMismatchStrategy is QualifiedNewOtrMessage.ClientMismatchStrategy.IgnoreOnly &amp;&amp; plus.clientMismatchStrategy is QualifiedNewOtrMessage.ClientMismatchStrategy.IgnoreOnly</ID>
    <ID>MaxLineLength:otr.kt$clientMismatchStrategy is QualifiedNewOtrMessage.ClientMismatchStrategy.ReportAll &amp;&amp; plus.clientMismatchStrategy is QualifiedNewOtrMessage.ClientMismatchStrategy.ReportAll</ID>
    <ID>MaxLineLength:otr.kt$clientMismatchStrategy is QualifiedNewOtrMessage.ClientMismatchStrategy.ReportOnly &amp;&amp; plus.clientMismatchStrategy is QualifiedNewOtrMessage.ClientMismatchStrategy.ReportOnly</ID>
    <ID>MaxLineLength:otr.kt$private</ID>
    <ID>MaxLineLength:otr.kt$public</ID>
    <ID>MaximumLineLength:com.wire.kalium.logic.data.client.ClientMapper.kt:38</ID>
    <ID>MaximumLineLength:com.wire.kalium.logic.data.conversation.ConversationRepository.kt:299</ID>
    <ID>MaximumLineLength:com.wire.kalium.logic.data.notification.LocalNotification.kt:21</ID>
    <ID>MaximumLineLength:com.wire.kalium.logic.data.prekey.remote.PreKeyListMapper.kt:22</ID>
    <ID>MaximumLineLength:com.wire.kalium.logic.feature.message.SessionEstablisher.kt:64</ID>
    <ID>MaximumLineLength:com.wire.kalium.logic.feature.session.SaveSessionUseCase.kt:6</ID>
    <ID>MaximumLineLength:com.wire.kalium.network.api.conversation.ConversationApiImpl.kt:61</ID>
    <ID>MaximumLineLength:com.wire.kalium.network.api.conversation.ConversationApiImpl.kt:68</ID>
    <ID>MaximumLineLength:com.wire.kalium.network.api.conversation.ConversationEvent.kt:15</ID>
    <ID>MaximumLineLength:com.wire.kalium.network.api.conversation.ConversationEvent.kt:21</ID>
    <ID>MaximumLineLength:com.wire.kalium.network.api.conversation.ConversationEvent.kt:9</ID>
    <ID>MaximumLineLength:com.wire.kalium.network.api.model.UserDTO.kt:39</ID>
    <ID>MaximumLineLength:com.wire.kalium.persistence.dao.ConversationDAOImpl.kt:74</ID>
    <ID>MaximumLineLength:com.wire.kalium.persistence.dao.ConversationDAOImpl.kt:75</ID>
    <ID>MaximumLineLength:com.wire.kalium.persistence.dao.client.ClientDAOImpl.kt:35</ID>
    <ID>MayBeConst:LoginApiTest.kt$LoginApiTest.Companion$val refreshToken = "415a5306-a476-41bc-af36-94ab075fd881"</ID>
    <ID>MayBeConst:MLSConversationRepositoryTest.kt$MLSConversationRepositoryTest.Companion$val GROUP_ID = "groupId"</ID>
    <ID>MayBeConst:MessageRepositoryTest.kt$MessageRepositoryTest.Companion$val TEST_DATETIME = "2022-04-21T20:56:22.393Z"</ID>
    <ID>MayBeConst:MessageSenderTest.kt$MessageSenderTest.Companion$val TEST_MESSAGE_UUID = "messageUuid"</ID>
    <ID>MayBeConst:SearchUserRepositoryTest.kt$SearchUserRepositoryTest.Companion$val TEST_DOMAIN = "testDomain"</ID>
    <ID>MayBeConst:SearchUserRepositoryTest.kt$SearchUserRepositoryTest.Companion$val TEST_QUERY = "testQuery"</ID>
    <ID>ModifierOrder:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$external open</ID>
    <ID>ModifierOrder:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$external open</ID>
    <ID>ModifierOrder:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$override open</ID>
    <ID>ModifierOrder:CryptoboxSession.module_@wireapp_cryptobox.kt$CryptoboxSession$external open</ID>
    <ID>ModifierOrder:Decoder.module_@wireapp_cbor.kt$Decoder$external open</ID>
    <ID>ModifierOrder:Encoder.module_@wireapp_cbor.kt$Encoder$external open</ID>
    <ID>ModifierOrder:IdentityKey.module_@wireapp_proteus.kt$IdentityKey$external open</ID>
    <ID>ModifierOrder:IdentityKeyPair.module_@wireapp_proteus.kt$IdentityKeyPair$external open</ID>
    <ID>ModifierOrder:KeyPair.module_@wireapp_proteus.kt$KeyPair$external open</ID>
    <ID>ModifierOrder:MemoryEngine.module_@wireapp_store-engine.kt$MemoryEngine$external open</ID>
    <ID>ModifierOrder:PreKey.module_@wireapp_proteus.kt$PreKey$external open</ID>
    <ID>ModifierOrder:PreKeyBundle.module_@wireapp_proteus.kt$PreKeyBundle$external open</ID>
    <ID>ModifierOrder:PreKeyStore.module_@wireapp_proteus.kt$PreKeyStore$external open</ID>
    <ID>ModifierOrder:PublicKey.module_@wireapp_proteus.kt$PublicKey$external open</ID>
    <ID>ModifierOrder:SecretKey.module_@wireapp_proteus.kt$SecretKey$external open</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.configuration.ClientConfig.kt:16</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.data.asset.KaliumFileSystem.kt:14</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.data.id.QualifiedId.kt:41</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.auth.sso.GetSSOLoginSessionUseCase.kt:36</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.auth.sso.SSOFinalizeLoginUseCase.kt:31</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.auth.sso.SSOInitiateLoginUseCase.kt:67</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.auth.sso.SSOInitiateLoginUseCase.kt:69</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.call.usecase.UpdateVideoStateUseCase.kt:26</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.client.DeleteClientUseCase.kt:18</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.client.DeleteClientUseCase.kt:20</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.client.RegisterClientUseCase.kt:72</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.message.GetNotificationsUseCase.kt:166</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.publicuser.SearchUserDirectoryUseCase.kt:35</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.publicuser.SearchUserDirectoryUseCase.kt:37</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.register.RequestActivationCodeUseCase.kt:20</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.session.RegisterTokenUseCase.kt:32</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.feature.user.SetUserHandleUseCase.kt:38</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.sync.ConversationEventReceiver.kt:291</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.sync.ConversationEventReceiver.kt:301</ID>
    <ID>MultiLineIfElse:com.wire.kalium.logic.sync.ConversationEventReceiver.kt:307</ID>
    <ID>MultiLineIfElse:com.wire.kalium.network.utils.WireDefaultRequest.kt:232</ID>
    <ID>NestedBlockDepth:ValidateSSOCodeUseCase.kt$ValidateSSOCodeUseCaseImpl$override fun invoke(ssoCode: String): ValidateSSOCodeResult</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.KaliumApplication.kt:38</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cli.CLIApplication.kt:103</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cli.CLIApplication.kt:193</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cli.CLIApplication.kt:201</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cli.CLIApplication.kt:213</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cli.RegisterAccountApp.kt:78</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cryptography.MLSClientImpl.kt:111</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cryptography.ProteusClientImpl.kt:113</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cryptography.ProteusClientImpl.kt:118</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cryptography.ProteusClientImpl.kt:128</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cryptography.ProteusClientImpl.kt:137</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cryptography.ProteusClientImpl.kt:156</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cryptography.ProteusClientImpl.kt:194</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.cryptography.ProteusClientImpl.kt:88</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.CoreLogic.kt:91</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.configuration.UserConfigRepository.kt:23</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.configuration.server.ServerConfig.kt:248</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.client.MLSClientProvider.kt:13</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.client.MLSClientProviderImpl.kt:73</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.connection.ConnectionMapper.kt:63</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.connection.ConnectionStatusMapper.kt:14</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.conversation.ConversationRepository.kt:124</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.conversation.ConversationStatusMapper.kt:49</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.conversation.MLSConversationRepository.kt:119</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.conversation.MLSConversationRepository.kt:30</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.event.Event.kt:66</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.keypackage.KeyPackageRepository.kt:28</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.keypackage.KeyPackageRepository.kt:64</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.publicuser.PublicUserMapper.kt:82</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.publicuser.SearchUserRepository.kt:70</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.publicuser.model.OtherUser.kt:26</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.data.user.UserTypeMapper.kt:31</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.UserSessionScope.kt:359</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.asset.GetAvatarAssetUseCase.kt:26</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.auth.sso.GetSSOLoginSessionUseCase.kt:42</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.auth.sso.SSOMetaDataUseCase.kt:29</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.call.scenario.OnSFTRequest.kt:61</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.connection.ConnectionScope.kt:27</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.conversation.GetOrCreateOneToOneConversationUseCase.kt:31</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.conversation.SyncConversationsUseCase.kt:12</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.conversation.UpdateConversationMutedStatusUseCase.kt:42</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.keypackage.MLSKeyPackageCountUseCase.kt:27</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.message.MLSMessageCreator.kt:20</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.message.MLSMessageCreator.kt:36</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.message.MessageEnvelopeCreator.kt:28</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.message.MessageSendFailureHandler.kt:35</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.message.SendTextMessageUseCase.kt:56</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.publicuser.GetAllContactsUseCase.kt:13</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.publicuser.GetKnownUserUseCase.kt:16</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.publicuser.SearchKnownUsersUseCase.kt:23</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.publicuser.SearchUserDirectoryUseCase.kt:51</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.register.VerifyActivationCodeUseCase.kt:27</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.user.GetUserInfoUseCase.kt:68</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.user.IsLoggingEnabledUseCase.kt:32</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.user.SyncContactsUseCase.kt:16</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.feature.user.SyncSelfUserUseCase.kt:12</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.sync.ConversationEventReceiver.kt:342</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.sync.ListenToEventsUseCase.kt:11</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.sync.PendingMessagesSenderWorker.kt:43</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.sync.SlowSyncWorker.kt:44</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.sync.UpdateApiVersionsScheduler.kt:24</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.sync.handler.MessageTextEditHandler.kt:38</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.logic.util.TimeParser.kt:44</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.AuthenticatedNetworkContainer.kt:81</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.BackendMetaDataUtil.kt:11</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.api.contact.search.UserSearchApi.kt:10</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.api.message.MLSMessageApi.kt:34</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.api.notification.NotificationApi.kt:42</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.api.prekey.PreKeyApi.kt:13</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.api.user.client.ClientApi.kt:96</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.api.user.register.RegisterApi.kt:174</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.api.versioning.VersionApi.kt:43</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.network.serialization.ByteArrayConverter.kt:26</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.client.TokenStorage.kt:44</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.client.UserConfigStorage.kt:31</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.dao.ContentTypeAdapter.kt:13</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.dao.QualifiedIDAdapter.kt:15</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.dao.client.ClientDAOImpl.kt:38</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.dao_kalium_db.ServerConfigurationDAO.kt:99</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.db.GlobalDatabaseProvider.kt:12</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.db.GlobalDatabaseProvider.kt:53</ID>
    <ID>NoBlankLineBeforeRbrace:com.wire.kalium.persistence.kmm_settings.KaliumPreferences.kt:24</ID>
    <ID>NoConsecutiveBlankLines:com.wire.detekt.rules.EnforceSerializableFields.kt:55</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.cli.RegisterAccountApp.kt:79</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.GlobalKaliumScope.kt:54</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.configuration.UserConfigRepository.kt:8</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.configuration.server.ServerConfig.kt:157</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.configuration.server.ServerConfig.kt:96</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.configuration.server.ServerConfigRepository.kt:141</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.configuration.server.ServerConfigRepository.kt:21</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.configuration.server.ServerConfigRepository.kt:85</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.data.auth.login.SSOLoginRepository.kt:47</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.data.client.remote.ClientRemoteRepository.kt:39</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.data.connection.ConnectionMapper.kt:66</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.data.connection.ConnectionStatusMapper.kt:83</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.data.event.Event.kt:67</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.data.message.MessageRepository.kt:256</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.failure.ServerConfigFailure.kt:10</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.auth.AddAuthenticatedUserUseCase.kt:8</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.auth.AuthenticationScope.kt:54</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.auth.ValidateEmailUseCase.kt:7</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.auth.ValidatePasswordUseCase.kt:7</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.client.SelfClientsUseCase.kt:19</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.client.SelfClientsUseCase.kt:28</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.keypackage.MLSKeyPackageCountUseCase.kt:30</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.message.MessageSendFailureHandler.kt:11</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.message.SessionEstablisher.kt:63</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.notificationToken.SaveNotificationTokenUseCase.kt:19</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.notificationToken.SaveNotificationTokenUseCase.kt:7</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.publicuser.GetKnownUserUseCase.kt:19</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.publicuser.SearchUserDirectoryUseCase.kt:11</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.publicuser.SearchUserDirectoryUseCase.kt:55</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.register.RegisterAccountUseCase.kt:84</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.server.ObserveServerConfigUseCase.kt:22</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.server.ObserveServerConfigUseCase.kt:49</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.server.UpdateApiVersionsUseCase.kt:25</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.session.DeregisterTokenUseCase.kt:29</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.session.RegisterTokenUseCase.kt:46</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.user.IsLoggingEnabledUseCase.kt:12</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.user.IsLoggingEnabledUseCase.kt:35</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.feature.user.SetUserHandleUseCase.kt:14</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.featureFlags.KaliumConfigs.kt:39</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.functional.Either.kt:39</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.functional.Either.kt:53</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.functional.Either.kt:61</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.functional.Either.kt:73</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.sync.DefaultWorker.kt:3</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.sync.UpdateApiVersionsWorker.kt:5</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.sync.WorkSchedulerImpl.kt:11</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.sync.WorkSchedulerImpl.kt:57</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.logic.sync.handler.MessageTextEditHandler.kt:41</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.NetworkClient.kt:21</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.ServerMetaDataManager.kt:3</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.UnauthenticatedNetworkContainer.kt:28</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.conversation.AddParticipantRequest.kt:16</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.conversation.CreateConversationRequest.kt:16</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.model.Tokens.kt:10</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.notification.EventSerialization.kt:6</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.prekey.PreKeyApiImpl.kt:34</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.teams.TeamsApi.kt:20</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.client.ClientApi.kt:35</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.client.ClientResponse.kt:44</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.details.ListUserRequest.kt:19</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.login.LoginApiImpl.kt:43</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.login.SSOLoginApi.kt:101</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.login.SSOSettingsResponse.kt:3</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.login.SSOSettingsResponse.kt:7</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.logout.RemoveCookiesRequest.kt:6</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.pushToken.PushTokenBody.kt:3</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.register.ActivationRequest.kt:3</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.register.ActivationRequest.kt:8</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.register.RegisterApi.kt:121</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.register.RegisterApi.kt:167</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.user.self.SelfApi.kt:44</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.api.versioning.VersionApi.kt:39</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.session.SessionManager.kt:22</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.utils.WireDefaultRequest.kt:184</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.network.utils.WireDefaultRequest.kt:30</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.persistence.DBUtil.kt:39</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.persistence.client.SessionStorage.kt:127</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.persistence.client.SessionStorage.kt:94</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.persistence.client.TokenStorage.kt:27</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.persistence.client.UserConfigStorage.kt:18</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.persistence.db.GlobalDatabaseProvider.kt:19</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.persistence.db.GlobalDatabaseProvider.kt:21</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.persistence.db.GlobalDatabaseProvider.kt:54</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.util.KaliumDispatcher.kt:13</ID>
    <ID>NoConsecutiveBlankLines:com.wire.kalium.util.KaliumDispatcher.kt:5</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.logic.feature.auth.ValidatePasswordUseCase.kt:23</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.logic.feature.auth.ValidatePasswordUseCase.kt:24</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.logic.feature.auth.ValidatePasswordUseCase.kt:25</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.logic.feature.auth.ValidatePasswordUseCase.kt:26</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.logic.feature.auth.ValidatePasswordUseCase.kt:27</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.network.api.contact.search.UserSearchApiImpl.kt:9</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.persistence.dao.message.MessageDAOImpl.kt:205</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.persistence.util.FileNameUtil.kt:19</ID>
    <ID>NoMultipleSpaces:com.wire.kalium.persistence.util.JsonSerializer.kt:5</ID>
    <ID>NoSemicolons:com.wire.kalium.PackagePathProvider.kt:1</ID>
    <ID>NoTrailingSpaces:com.wire.kalium.persistence.dao.ContentTypeAdapter.kt:13</ID>
    <ID>NoTrailingSpaces:com.wire.kalium.persistence.dao.client.ClientDAOImpl.kt:38</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.data.call.CallProfile.kt:4</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.data.connection.ConnectionMapper.kt:6</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.data.prekey.PreKeyRepository.kt:8</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.data.user.ConnectionStateMapper.kt:4</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.feature.call.Call.kt:5</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.feature.call.Call.kt:7</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.feature.call.Call.kt:8</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.feature.call.MediaManagerServiceImpl.kt:6</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.feature.call.MediaManagerServiceImpl.kt:7</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.feature.call.scenario.OnConfigRequest.kt:10</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.feature.call.scenario.OnIncomingCall.kt:11</ID>
    <ID>NoUnusedImports:com.wire.kalium.logic.feature.message.GetRecentMessagesUseCase.kt:6</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.HttpEngine.kt:6</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.message.OtrClientEntryMapper.kt:5</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.notification.NotificationApiImpl.kt:17</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.notification.NotificationApiImpl.kt:19</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.notification.NotificationApiImpl.kt:23</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.notification.NotificationApiImpl.kt:24</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.notification.NotificationApiImpl.kt:26</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.notification.NotificationApiImpl.kt:27</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.prekey.PreKeyApiImpl.kt:6</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.user.details.UserDetailsApiImpl.kt:7</ID>
    <ID>NoUnusedImports:com.wire.kalium.network.api.user.self.SelfApi.kt:7</ID>
    <ID>NoWildcardImports:com.wire.kalium.network.defaultHttpEngine.kt:3</ID>
    <ID>ObjectPropertyNaming:Decoder.module_@wireapp_cbor.kt$Decoder.Companion$var _check_overflow: Any</ID>
    <ID>PackageName:com.wire.kalium.persistence.dao_kalium_db.ServerConfigurationDAO.kt:1</ID>
    <ID>PackageName:com.wire.kalium.persistence.kmm_settings.EncryptedSettingsHolder.kt:1</ID>
    <ID>PackageName:com.wire.kalium.persistence.kmm_settings.KaliumPreferences.kt:1</ID>
    <ID>PackageNaming:EncryptedSettingsHolder.kt$package com.wire.kalium.persistence.kmm_settings</ID>
    <ID>PackageNaming:KaliumPreferences.kt$package com.wire.kalium.persistence.kmm_settings</ID>
    <ID>PackageNaming:ServerConfigurationDAO.kt$package com.wire.kalium.persistence.dao_kalium_db</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClient.kt:110</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClient.kt:52</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClient.kt:72</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClient.kt:86</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClient.kt:98</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClientImpl.kt:16</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClientImpl.kt:42</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClientImpl.kt:43</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClientImpl.kt:84</ID>
    <ID>ParameterListWrapping:com.wire.kalium.cryptography.MLSClientImpl.kt:95</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.auth.login.LoginRepository.kt:14</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.auth.login.LoginRepository.kt:18</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.auth.login.LoginRepository.kt:29</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.auth.login.LoginRepository.kt:34</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.auth.login.LoginRepository.kt:39</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.auth.login.SSOLoginRepository.kt:13</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.auth.login.SSOLoginRepository.kt:30</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.client.MLSClientProvider.kt:20</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.conversation.ConversationMapper.kt:39</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.conversation.ConversationMapper.kt:82</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.event.EventRepository.kt:117</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.notification.LocalNotification.kt:21</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.register.RegisterAccountRepository.kt:18</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.register.RegisterAccountRepository.kt:23</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.register.RegisterAccountRepository.kt:39</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.register.RegisterAccountRepository.kt:44</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.data.user.UserMapper.kt:101</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.feature.auth.LoginUseCase.kt:23</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.feature.auth.LoginUseCase.kt:34</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.feature.register.RegisterAccountUseCase.kt:27</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.feature.user.GetSelfUserUseCase.kt:8</ID>
    <ID>ParameterListWrapping:com.wire.kalium.logic.feature.user.GetSelfUserUseCase.kt:9</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.NetworkClient.kt:30</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.NetworkClient.kt:96</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.UnauthenticatedNetworkContainer.kt:17</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.api.keypackage.KeyPackageDTO.kt:16</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.api.teams.TeamsApi.kt:40</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.api.user.login.LoginApi.kt:10</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.api.user.login.LoginApi.kt:14</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.api.user.login.LoginApi.kt:19</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.api.user.login.LoginApiImpl.kt:45</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.api.user.register.RegisterApi.kt:102</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.utils.NetworkResponse.kt:14</ID>
    <ID>ParameterListWrapping:com.wire.kalium.network.utils.WireDefaultRequest.kt:145</ID>
    <ID>ParameterListWrapping:com.wire.kalium.persistence.client.LastRetrievedNotificationEventStorage.kt:19</ID>
    <ID>ReturnCount:NetworkUtils.kt$internal fun String.splitSetCookieHeader(): List&lt;String></ID>
    <ID>SpacingAroundColon:com.wire.kalium.cryptography.MLSClient.kt:113</ID>
    <ID>SpacingAroundColon:com.wire.kalium.cryptography.exceptions.ProteusException.kt:3</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.data.call.CallMapper.kt:74</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.data.client.MLSClientProvider.kt:22</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.data.client.remote.ClientRemoteRepository.kt:21</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.data.event.Event.kt:80</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.data.message.Message.kt:27</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.data.message.Message.kt:46</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.data.publicuser.model.UserSearchResult.kt:3</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.failure.ResourceFailure.kt:5</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.failure.ServerConfigFailure.kt:5</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.failure.ServerConfigFailure.kt:6</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.failure.ServerConfigFailure.kt:7</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.feature.auth.sso.ValidateSSOCodeUseCase.kt:24</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.feature.auth.sso.ValidateSSOCodeUseCase.kt:25</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.feature.message.MLSMessageCreator.kt:26</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.feature.session.SessionResult.kt:7</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.functional.Either.kt:59</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.sync.KaliumSyncException.kt:5</ID>
    <ID>SpacingAroundColon:com.wire.kalium.logic.util.DateTimeUtil.kt:10</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.api.conversation.AddParticipantRequest.kt:18</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.api.conversation.AddParticipantRequest.kt:30</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.api.message.EnvelopeProtoMapperImpl.kt:5</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.api.notification.NotificationApi.kt:11</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.api.notification.NotificationApi.kt:28</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.api.notification.NotificationApi.kt:7</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.api.notification.NotificationApi.kt:9</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.api.versioning.VersionInfoDTO.kt:12</ID>
    <ID>SpacingAroundColon:com.wire.kalium.network.serialization.ByteArrayConverter.kt:17</ID>
    <ID>SpacingAroundColon:com.wire.kalium.persistence.client.ClientRegistrationStorageImpl.kt:9</ID>
    <ID>SpacingAroundColon:com.wire.kalium.persistence.client.LastRetrievedNotificationEventStorage.kt:19</ID>
    <ID>SpacingAroundColon:com.wire.kalium.persistence.dao.MetadataDAOImpl.kt:9</ID>
    <ID>SpacingAroundColon:com.wire.kalium.persistence.dao.QualifiedIDAdapter.kt:5</ID>
    <ID>SpacingAroundColon:com.wire.kalium.persistence.kmm_settings.EncryptedSettingsHolder.kt:12</ID>
    <ID>SpacingAroundColon:com.wire.kalium.persistence.kmm_settings.EncryptedSettingsHolder.kt:9</ID>
    <ID>SpacingAroundComma:com.wire.kalium.logic.feature.user.UserScope.kt:39</ID>
    <ID>SpacingAroundComma:com.wire.kalium.persistence.dao.message.MessageDAO.kt:11</ID>
    <ID>SpacingAroundCurly:build.gradle.kts:11</ID>
    <ID>SpacingAroundCurly:build.gradle.kts:7</ID>
    <ID>SpacingAroundCurly:com.wire.kalium.network.utils.WireDefaultRequest.kt:94</ID>
    <ID>SpacingAroundCurly:com.wire.kalium.presentation.MainActivity.kt:80</ID>
    <ID>SpacingAroundKeyword:com.wire.kalium.logic.feature.auth.sso.ValidateSSOCodeUseCase.kt:16</ID>
    <ID>SpacingAroundKeyword:com.wire.kalium.logic.feature.auth.sso.ValidateSSOCodeUseCase.kt:19</ID>
    <ID>SpacingAroundKeyword:com.wire.kalium.logic.feature.register.RequestActivationCodeUseCase.kt:19</ID>
    <ID>SpacingAroundKeyword:com.wire.kalium.network.session.SessionManager.kt:47</ID>
    <ID>SpacingAroundOperators:com.wire.kalium.network.utils.WireDefaultRequest.kt:94</ID>
    <ID>SpacingAroundParens:com.wire.kalium.logic.data.message.Message.kt:46</ID>
    <ID>SpacingAroundParens:com.wire.kalium.network.api.conversation.AddParticipantRequest.kt:9</ID>
    <ID>StringTemplate:com.wire.kalium.cryptography.IDs.kt:26</ID>
    <ID>StringTemplate:com.wire.kalium.cryptography.ProteusClientImpl.kt:7</ID>
    <ID>StringTemplate:com.wire.kalium.logic.data.sso.SSOUtil.kt:5</ID>
    <ID>StringTemplate:com.wire.kalium.persistence.util.FileNameUtil.kt:11</ID>
    <ID>TooGenericExceptionCaught:CoreFailure.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:NetworkUtils.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ProteusClientImpl.kt$ProteusClientImpl$e: Exception</ID>
    <ID>TooGenericExceptionThrown:MainActivity.kt$MainActivity$throw RuntimeException( "There was an error on the login :(" + "Check the credentials and the internet connection and try again" )</ID>
    <ID>TooManyFunctions:Calling.kt$Calling : Library</ID>
    <ID>TooManyFunctions:ConversationDAO.kt$ConversationDAO</ID>
    <ID>TooManyFunctions:ConversationDAOImpl.kt$ConversationDAOImpl : ConversationDAO</ID>
    <ID>TooManyFunctions:ConversationRepository.kt$ConversationDataSource : ConversationRepository</ID>
    <ID>TooManyFunctions:ConversationRepository.kt$ConversationRepository</ID>
    <ID>TooManyFunctions:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox</ID>
    <ID>TooManyFunctions:Decoder.module_@wireapp_cbor.kt$Decoder</ID>
    <ID>TooManyFunctions:Encoder.module_@wireapp_cbor.kt$Encoder</ID>
    <ID>TooManyFunctions:KaliumException.kt$com.wire.kalium.network.exceptions.KaliumException.kt</ID>
    <ID>TooManyFunctions:MapperProvider.kt$MapperProvider$MapperProvider</ID>
    <ID>TooManyFunctions:MessageDAO.kt$MessageDAO</ID>
    <ID>TooManyFunctions:MessageDAOImpl.kt$MessageDAOImpl : MessageDAO</ID>
    <ID>TooManyFunctions:messages.kt$com.wire.kalium.protobuf.messages.messages.kt</ID>
    <ID>TooManyFunctions:otr.kt$com.wire.kalium.protobuf.otr.otr.kt</ID>
    <ID>TopLevelPropertyNaming:Uint32_t.kt$private const val integerSize = 4</ID>
    <ID>UnnecessaryAbstractClass:GlobalDBBaseTest.kt$GlobalDBBaseTest</ID>
    <ID>UnnecessaryAbstractClass:UserModel.kt$User</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var create_last_resort_prekey: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var create_new_identity: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var get_prekey: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var get_session_queue: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var load_session_from_cache: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var publish_event: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var publish_prekeys: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var publish_session_id: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var refill_prekeys: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var remove_session_from_cache: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var save_identity: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var save_session_in_cache: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var session_from_message: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var session_save: Any</ID>
    <ID>VariableNaming:Cryptobox.module_@wireapp_cryptobox.kt$Cryptobox$open var session_update: Any</ID>
    <ID>VariableNaming:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$open var from_store: Any</ID>
    <ID>VariableNaming:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$CryptoboxCRUDStore$open var to_store: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _advance: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _bytes: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _f32: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _f64: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _read: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _read_length: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _read_signed: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _read_type_info: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _read_unsigned: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _skip_until_break: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _skip_value: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _type_info_with_assert: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _u16: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _u32: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _u64: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$Decoder$open var _u8: Any</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$DecoderConfig$var max_array_length: Number</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$DecoderConfig$var max_bytes_length: Number</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$DecoderConfig$var max_nesting: Number</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$DecoderConfig$var max_object_size: Number</ID>
    <ID>VariableNaming:Decoder.module_@wireapp_cbor.kt$DecoderConfig$var max_text_length: Number</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _advance: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _bytes: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _ensure: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _f32: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _f64: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _grow_buffer: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _new_buffer_length: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _u16: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _u32: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _u64: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _u8: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _write: Any</ID>
    <ID>VariableNaming:Encoder.module_@wireapp_cbor.kt$Encoder$open var _write_type_and_len: Any</ID>
    <ID>VariableNaming:IdentityKey.module_@wireapp_proteus.kt$IdentityKey$open var public_key: PublicKey</ID>
    <ID>VariableNaming:IdentityKeyPair.module_@wireapp_proteus.kt$IdentityKeyPair$open var public_key: IdentityKey</ID>
    <ID>VariableNaming:IdentityKeyPair.module_@wireapp_proteus.kt$IdentityKeyPair$open var secret_key: SecretKey</ID>
    <ID>VariableNaming:KeyPair.module_@wireapp_proteus.kt$KeyPair$open var public_key: PublicKey</ID>
    <ID>VariableNaming:KeyPair.module_@wireapp_proteus.kt$KeyPair$open var secret_key: SecretKey</ID>
    <ID>VariableNaming:PreKey.module_@wireapp_proteus.kt$PreKey$open var key_id: Number</ID>
    <ID>VariableNaming:PreKey.module_@wireapp_proteus.kt$PreKey$open var key_pair: KeyPair</ID>
    <ID>VariableNaming:PreKeyBundle.module_@wireapp_proteus.kt$PreKeyBundle$open var identity_key: IdentityKey</ID>
    <ID>VariableNaming:PreKeyBundle.module_@wireapp_proteus.kt$PreKeyBundle$open var prekey_id: Number</ID>
    <ID>VariableNaming:PreKeyBundle.module_@wireapp_proteus.kt$PreKeyBundle$open var public_key: PublicKey</ID>
    <ID>VariableNaming:PublicKey.module_@wireapp_proteus.kt$PublicKey$open var pub_curve: Uint8Array</ID>
    <ID>VariableNaming:PublicKey.module_@wireapp_proteus.kt$PublicKey$open var pub_edward: Uint8Array</ID>
    <ID>VariableNaming:SecretKey.module_@wireapp_proteus.kt$SecretKey$open var sec_curve: Uint8Array</ID>
    <ID>VariableNaming:SecretKey.module_@wireapp_proteus.kt$SecretKey$open var sec_edward: Uint8Array</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:CRUDEngine.module_@wireapp_store-engine.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:Cryptobox.module_@wireapp_cryptobox.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:CryptoboxCRUDStore.module_@wireapp_cryptobox.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:CryptoboxSession.module_@wireapp_cryptobox.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:Decoder.module_@wireapp_cbor.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:Encoder.module_@wireapp_cbor.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:IdentityKey.module_@wireapp_proteus.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:IdentityKeyPair.module_@wireapp_proteus.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:KeyPair.module_@wireapp_proteus.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:MemoryEngine.module_@wireapp_store-engine.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:PreKey.module_@wireapp_proteus.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:PreKeyBundle.module_@wireapp_proteus.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:PreKeyStore.module_@wireapp_proteus.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:PublicKey.module_@wireapp_proteus.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import kotlin.js.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.khronos.webgl.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.dom.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.dom.events.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.dom.parsing.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.dom.svg.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.dom.url.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.fetch.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.files.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.notifications.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.performance.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.workers.*</ID>
    <ID>WildcardImport:SecretKey.module_@wireapp_proteus.kt$import org.w3c.xhr.*</ID>
    <ID>WildcardImport:defaultHttpEngine.kt$import io.ktor.client.engine.*</ID>
  </CurrentIssues>
</SmellBaseline>
