import com.wire.kalium.persistence.dao.QualifiedIDEntity;
import com.wire.kalium.persistence.dao.unread.UnreadEventTypeEntity;
import kotlinx.datetime.Instant;

CREATE TABLE UnreadEvent (
      id TEXT NOT NULL,
      type TEXT AS UnreadEventTypeEntity NOT NULL,
      conversation_id TEXT AS QualifiedIDEntity NOT NULL,
      creation_date INTEGER AS Instant NOT NULL,

    FOREIGN KEY (id, conversation_id) REFERENCES Message(id, conversation_id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (id, conversation_id)
);

deleteReadedEvents:
DELETE FROM UnreadEvent WHERE creation_date <= ? AND conversation_id = ?;

insertEvent:
INSERT INTO UnreadEvent(id, type, conversation_id, creation_date)
VALUES(?, ?, ?, ?);

getUnreadEvents:
SELECT * FROM UnreadEvent;

getPaginatedUnreadEvents:
SELECT * FROM UnreadEvent LIMIT ? OFFSET ?;

getUnreadEventsCount:
SELECT COUNT(*) FROM UnreadEvent;
