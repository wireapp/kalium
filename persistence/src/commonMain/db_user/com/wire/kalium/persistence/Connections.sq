import com.wire.kalium.persistence.dao.ConnectionEntity;
import com.wire.kalium.persistence.dao.QualifiedIDEntity;
import kotlin.Int;

CREATE TABLE Connection (
    from_id TEXT NOT NULL,
    conversation_id TEXT NOT NULL,
    qualified_conversation TEXT AS QualifiedIDEntity NOT NULL PRIMARY KEY,
    to_id TEXT NOT NULL,
    last_update TEXT NOT NULL,
    qualified_to TEXT AS QualifiedIDEntity NOT NULL,
    status TEXT AS ConnectionEntity.State NOT NULL DEFAULT 'NOT_CONNECTED'
);

deleteAllConnections:
DELETE FROM Connection;

deleteConnection:
DELETE FROM Connection WHERE to_id = ?;

insertConnection:
INSERT OR REPLACE INTO Connection(from_id, conversation_id, qualified_conversation, to_id, last_update, qualified_to, status)
VALUES(?, ?, ?, ?, ?, ?, ?);

updateConnectionLastUpdated:
UPDATE Connection SET last_update = ? WHERE to_id = ?;

selectConnectionRequests:
SELECT * FROM Connection WHERE status = 'SENT' OR status = 'PENDING';

selectChanges:
SELECT changes();
