import com.wire.kalium.persistence.dao.ConnectionEntity;
import com.wire.kalium.persistence.dao.QualifiedIDEntity;
import kotlin.Boolean;
import kotlinx.datetime.Instant;

CREATE TABLE Connection (
    from_id TEXT NOT NULL,
    conversation_id TEXT NOT NULL,
    qualified_conversation TEXT AS QualifiedIDEntity NOT NULL PRIMARY KEY ,
    to_id TEXT NOT NULL,
    last_update_date INTEGER AS Instant NOT NULL,
    qualified_to TEXT AS QualifiedIDEntity NOT NULL,
    status TEXT AS ConnectionEntity.State NOT NULL DEFAULT 'NOT_CONNECTED',
    should_notify INTEGER AS Boolean DEFAULT 1
);
-- Optimise comparisons and sorting by date:
CREATE INDEX connection_update_date_index ON Connection(last_update_date);
CREATE INDEX connection_qualified_to_index ON Connection(qualified_to);
CREATE INDEX connection_qualified_conversation_index ON Connection(qualified_conversation);

deleteConnection:
DELETE FROM Connection WHERE qualified_conversation = ?;

insertConnection:
INSERT INTO Connection(from_id, conversation_id, qualified_conversation, to_id, last_update_date, qualified_to, status)
VALUES(?, ?, ?, ?, ?, ?, ?)
ON CONFLICT(qualified_conversation) DO UPDATE SET
from_id = excluded.from_id,
conversation_id = excluded.conversation_id,
to_id = excluded.to_id,
last_update_date = excluded.last_update_date,
qualified_to = excluded.qualified_to,
status = excluded.status;

updateConnectionLastUpdated:
UPDATE Connection SET last_update_date = ? WHERE to_id = ?;

updateNotificationFlag:
UPDATE Connection SET should_notify = ? WHERE qualified_to = ?;

setAllConnectionsAsNotified:
UPDATE Connection SET should_notify = 0
WHERE status = 'PENDING' AND should_notify = 1;

getConnections:
SELECT * FROM Connection;

selectConnectionRequests:
SELECT * FROM Connection LEFT JOIN User ON Connection.qualified_to == User.qualified_id WHERE status = 'SENT' OR status = 'PENDING' OR status = 'IGNORED';

selectConnectionsForNotification:
SELECT * FROM Connection LEFT JOIN User ON Connection.qualified_to == User.qualified_id WHERE status = 'PENDING' AND should_notify = 1;
