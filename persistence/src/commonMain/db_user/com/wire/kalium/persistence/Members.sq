import com.wire.kalium.persistence.dao.Member.Role;
import com.wire.kalium.persistence.dao.QualifiedIDEntity;

CREATE TABLE Member (
    user TEXT AS QualifiedIDEntity NOT NULL,
    conversation TEXT AS QualifiedIDEntity NOT NULL,
    role TEXT AS Role NOT NULL,
    CONSTRAINT member_conv PRIMARY KEY (user, conversation) ON CONFLICT IGNORE,
    FOREIGN KEY (conversation) REFERENCES Conversation(qualified_id)  ON DELETE CASCADE,
    FOREIGN KEY (user) REFERENCES User(qualified_id) ON DELETE CASCADE
);

insertMember:
INSERT OR IGNORE INTO Member(user, conversation, role)
VALUES (?, ?, ?);

deleteMember:
DELETE FROM Member WHERE conversation = ? AND user = ?;

selectAllMembersByConversation:
SELECT * FROM Member WHERE conversation LIKE ('%' || :searchQuery || '%');

selectConversationByMember:
SELECT * FROM Member
JOIN Conversation ON Conversation.qualified_id = Member.conversation
WHERE Conversation.type = 'ONE_ON_ONE' AND Member.user = ?
LIMIT  1;

updateMemberRole:
UPDATE Member
SET role = ?
WHERE user = ? AND conversation = ?;

deleteUserFromConversations:
DELETE FROM Member WHERE user = ?;
