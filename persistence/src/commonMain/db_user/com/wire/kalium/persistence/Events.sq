import kotlin.Boolean;

CREATE TABLE Events (
    id INTEGER NOT NULL PRIMARY KEY,
    event_id TEXT NOT NULL UNIQUE,
    is_processed INTEGER NOT NULL,
    payload TEXT,
    transient INTEGER AS Boolean NOT NULL,
    is_live INTEGER NOT NULL DEFAULT 0
);

insertOrIgnoreEvent:
INSERT OR IGNORE INTO Events(event_id, is_processed, payload, is_live, transient)
VALUES (:event_id, :is_processed, :payload, :is_live, :transient);

selectAll:
SELECT * FROM Events;

getById:
SELECT * FROM Events WHERE event_id = ?;

markEventsAsProcessedUpTo:
UPDATE Events
SET is_processed = 1
WHERE id <= ?;

deleteProcessedEventsBefore:
DELETE FROM Events
WHERE id < ? AND is_processed = 1;

deleteAllProcessedEvents:
DELETE FROM Events
WHERE is_processed = 1;

markEventAsProcessed:
UPDATE Events
SET is_processed = 1
WHERE event_id = ?;

setAllUnprocessedEventsAsPending:
UPDATE Events
SET is_live = 0
WHERE is_processed = 0;

selectUnprocessedEvents:
SELECT * FROM Events
WHERE is_processed = 0
ORDER BY id ASC;

deleteUnprocessedLiveEventsByIds:
DELETE FROM Events
WHERE is_processed = 0 AND is_live = 1 AND event_id IN ?;
