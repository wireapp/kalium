import com.wire.kalium.persistence.dao.QualifiedIDEntity;
import kotlin.Boolean;
import kotlin.Float;
import kotlin.Int;
import kotlin.String;
import kotlin.collections.List;
import kotlinx.datetime.Instant;

CREATE TABLE MessageAttachments (
      asset_id TEXT NOT NULL,
      message_id TEXT NOT NULL,
      conversation_id TEXT AS QualifiedIDEntity NOT NULL,
      cell_asset INTEGER AS Boolean NOT NULL,
      local_path TEXT NOT NULL DEFAULT '',
      preview_url TEXT NOT NULL DEFAULT '',
      asset_mime_type TEXT NOT NULL,
      asset_size INTEGER,
      asset_name TEXT,

--       -- remote data fields
--       asset_otr_key BLOB,
--       asset_sha256 BLOB,
--       asset_token TEXT,
--       asset_domain TEXT,
--       asset_encryption_algorithm TEXT,
--
--       -- metadata fields
--       asset_width INTEGER AS Int,
--       asset_height INTEGER AS Int,
--       asset_duration_ms INTEGER,
--       asset_normalized_loudness BLOB,

      FOREIGN KEY (message_id, conversation_id) REFERENCES Message(id, conversation_id) ON DELETE CASCADE ON UPDATE CASCADE,
      PRIMARY KEY (asset_id, message_id, conversation_id)
);

insertCellAttachment:
INSERT INTO MessageAttachments (
    asset_id,
    message_id,
    conversation_id,
    cell_asset,
    asset_mime_type
) VALUES(?,?,?,?,?);

setPreviewUrl:
UPDATE MessageAttachments SET preview_url = ? WHERE asset_id = ?;
