import kotlin.Boolean;

DROP VIEW MessagePreview;

UPDATE Conversation
SET muted_status = 'ONLY_MENTIONS_AND_REPLIES_ALLOWED'
WHERE muted_status == 'ONLY_MENTIONS_ALLOWED';

CREATE VIEW IF NOT EXISTS MessagePreview
AS SELECT
Message.id AS id,
Message.conversation_id AS conversationId,
Message.content_type AS contentType,
Message.date AS date,
Message.visibility AS visibility,
User.name AS senderName,
User.connection_status AS senderConnectionStatus,
User.deleted AS senderIsDeleted,
SelfUser.id AS selfUserId,
(Message.sender_user_id == SelfUser.id) AS isSelfMessage,
MemberChangeContent.member_change_list AS memberChangeList,
MemberChangeContent.member_change_type AS memberChangeType,
ConversationNameChangedContent.conversation_name AS conversationName,
Mention.user_id AS mentionedUserId,
QuotedMessage.isQuotingSelfUser AS isQuotingSelfUser,
TextContent.text_body AS text,
AssetContent.asset_mime_type AS assetMimeType,
(strftime('%Y-%m-%dT%H:%M:%fZ', Message.date) > strftime('%Y-%m-%dT%H:%M:%fZ', Conversation.last_read_date)) AS isUnread,
IFNULL((strftime('%Y-%m-%dT%H:%M:%fZ', Message.date) < strftime('%Y-%m-%dT%H:%M:%fZ', Conversation.last_notified_message_date)), FALSE) AS isNotified,
Conversation.muted_status AS mutedStatus,
Conversation.type AS conversationType
FROM Message
LEFT JOIN User ON Message.sender_user_id = User.qualified_id
LEFT JOIN MessageQuoteDetails AS QuotedMessage ON Message.id = QuotedMessage.messageId AND Message.conversation_id = QuotedMessage.conversationId
LEFT JOIN Conversation AS Conversation ON Message.conversation_id == Conversation.qualified_id
LEFT JOIN MessageMemberChangeContent AS MemberChangeContent ON Message.id = MemberChangeContent.message_id AND Message.conversation_id = MemberChangeContent.conversation_id
LEFT JOIN MessageMention AS Mention ON Message.id == Mention.message_id
LEFT JOIN MessageConversationChangedContent AS ConversationNameChangedContent ON Message.id = ConversationNameChangedContent.message_id AND Message.conversation_id = ConversationNameChangedContent.conversation_id
LEFT JOIN MessageAssetContent AS AssetContent ON Message.id = AssetContent.message_id AND Message.conversation_id = AssetContent.conversation_id
LEFT JOIN MessageTextContent AS TextContent ON Message.id = TextContent.message_id AND Message.conversation_id = TextContent.conversation_id
LEFT JOIN SelfUser;
