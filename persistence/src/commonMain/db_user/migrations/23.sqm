import com.wire.kalium.persistence.dao.QualifiedIDEntity;
import com.wire.kalium.persistence.dao.receipt.ReceiptTypeEntity;

-- Delete the ReceiptDetails View
DROP VIEW ReceiptDetails;

-- Create new table with ON UPDATE CASCADE
CREATE TABLE ReceiptTemp (
    message_id TEXT NOT NULL,
    conversation_id TEXT AS QualifiedIDEntity NOT NULL,
    user_id TEXT AS QualifiedIDEntity NOT NULL,
    type TEXT AS ReceiptTypeEntity NOT NULL,
    date TEXT NOT NULL,
    FOREIGN KEY (message_id, conversation_id) REFERENCES Message(id, conversation_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (user_id) REFERENCES User(qualified_id) ON DELETE CASCADE,
    PRIMARY KEY (message_id, conversation_id, user_id, type)
);

-- Migrate data to new table
INSERT INTO ReceiptTemp(message_id, conversation_id, user_id, type, date) SELECT * FROM Receipt;

-- Drop old table
DROP TABLE IF EXISTS Receipt;

-- Rename new temp table to Receipt
ALTER TABLE ReceiptTemp RENAME TO Receipt;

-- Create the View again
CREATE VIEW IF NOT EXISTS ReceiptDetails
AS SELECT
	Receipt.type,
	Receipt.date,
	Receipt.message_id AS messageId,
	Receipt.conversation_id AS conversationId,
	User.qualified_id AS userId,
	User.name AS userName,
	User.handle AS userHandle,
	User.preview_asset_id AS previewAssetId,
	User.user_type AS userType,
	User.deleted AS isUserDeleted,
	User.connection_status AS connectionStatus,
	User.user_availability_status AS userAvailabilityStatus
FROM
	Receipt
INNER JOIN User ON User.qualified_id = Receipt.user_id
ORDER BY User.name;
