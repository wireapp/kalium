import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE ServerConfiguration (
    id TEXT PRIMARY KEY NOT NULL,
    title TEXT NOT NULL,
    apiBaseUrl TEXT NOT NULL,
    accountBaseUrl TEXT NOT NULL,
    webSocketBaseUrl TEXT NOT NULL,
    blackListUrl TEXT NOT NULL,
    teamsUrl TEXT NOT NULL,
    websiteUrl TEXT NOT NULL,
    domain TEXT UNIQUE,
    commonApiVersion INTEGER AS Int NOT NULL,
    federation INTEGER AS Boolean NOT NULL,
    CONSTRAINT server_config_unique UNIQUE (title, apiBaseUrl, webSocketBaseUrl)
);

deleteById:
DELETE FROM ServerConfiguration WHERE id = ?;

insert:
INSERT OR IGNORE INTO ServerConfiguration(id, apiBaseUrl, accountBaseUrl, webSocketBaseUrl, blackListUrl, teamsUrl, websiteUrl, title, federation, domain, commonApiVersion)
VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

updateApiVersion:
UPDATE ServerConfiguration SET commonApiVersion = ? WHERE id = ?;

/** this function will be used when a config get updated from v0 where domain can be null */
updateApiVersionAndDomain:
UPDATE ServerConfiguration SET commonApiVersion = ?, domain = ? WHERE id = ?;

setFederationToTrue:
UPDATE ServerConfiguration SET federation = 1 WHERE id = ?;

storedConfig:
SELECT * FROM ServerConfiguration;

getById:
SELECT * FROM ServerConfiguration WHERE id = ?;

getByLinks:
SELECT * FROM ServerConfiguration WHERE title = ? AND apiBaseUrl = ? AND webSocketBaseUrl = ?;
