import kotlin.Boolean;

-- Create temporary table that matches the same data from Accounts
CREATE TEMPORARY TABLE AccountsMigration (
    id TEXT PRIMARY KEY NOT NULL,
    scim_external_id TEXT,
    subject TEXT,
    tenant TEXT,
    server_config_id TEXT NOT NULL,
    logout_reason TEXT,
    isPersistentWebSocketEnabled INTEGER NOT NULL
);

-- Insert all Accounts into temporary Migration table
INSERT INTO AccountsMigration
SELECT
    id,
    scim_external_id,
    subject,
    tenant,
    server_config_id,
    logout_reason,
    isPersistentWebSocketEnabled
FROM Accounts;

-- Drop current Accounts table
DROP TABLE IF EXISTS Accounts;

-- Create new Accounts table with DEFAULT 0 for isPersistentWebSocketEnabled
CREATE TABLE Accounts (
    id TEXT AS QualifiedIDEntity PRIMARY KEY NOT NULL,
    scim_external_id TEXT,
    subject TEXT,
    tenant TEXT,
    server_config_id TEXT NOT NULL,
    logout_reason TEXT AS LogoutReason,
    isPersistentWebSocketEnabled INTEGER AS Boolean NOT NULL DEFAULT 0
);

-- Insert into Accounts the accounts cloned to the temporary migration table
INSERT INTO Accounts
SELECT
    id,
    scim_external_id,
    subject,
    tenant,
    server_config_id,
    logout_reason,
    isPersistentWebSocketEnabled
FROM AccountsMigration;

-- Probably redundant: drop the temporary table
DROP TABLE IF EXISTS AccountsMigration;
