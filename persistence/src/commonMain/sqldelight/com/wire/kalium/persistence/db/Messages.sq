import com.wire.kalium.persistence.dao.QualifiedID;
import com.wire.kalium.persistence.dao.message.MessageEntity;

CREATE TABLE Message (
      id TEXT NOT NULL,
      content TEXT,
      conversation_id TEXT AS QualifiedID NOT NULL,
      date TEXT NOT NULL,
      sender_user_id TEXT AS QualifiedID NOT NULL,
      sender_client_id TEXT NOT NULL,
      status TEXT AS MessageEntity.Status NOT NULL,
      FOREIGN KEY (conversation_id) REFERENCES Conversation(qualified_id),
      FOREIGN KEY (sender_user_id) REFERENCES User(qualified_id),
      PRIMARY KEY (id, conversation_id)
);

deleteAllMessages:
DELETE FROM Message;

deleteMessage:
DELETE FROM Message WHERE  id = ? AND conversation_id = ?;

insertMessage:
INSERT INTO Message(id, content, conversation_id, date, sender_user_id, sender_client_id, status)
VALUES(?, ?, ?, ?, ? ,?, ?)
ON CONFLICT(id, conversation_id) DO UPDATE SET
id = excluded.id,
content = excluded.content,
date = excluded.date,
sender_user_id = excluded.sender_user_id,
sender_client_id = excluded.sender_client_id,
status = excluded.status;

updateMessages:
UPDATE Message
SET content = ?, date = ?, sender_user_id = ?, sender_client_id = ?, status = ?
WHERE id = ? AND conversation_id = ?;

selectAllMessages:
SELECT * FROM Message;

selectById:
SELECT * FROM Message WHERE id = ? AND conversation_id = ?;

selectByConversationId:
SELECT * FROM Message WHERE conversation_id = ? ORDER BY date DESC LIMIT ?;
