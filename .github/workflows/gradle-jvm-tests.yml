name: "JVM & JS Tests"

on:
  merge_group:
  pull_request:
    types: [ opened, synchronize ] # Don't rerun on `edited` to save time
  push:
    branches: # Runs on develop to have the coverage diff on every PR
        - 'develop'

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
  detekt:
      uses: ./.github/workflows/codestyle.yml
  gradle-run-tests:
    needs: [detekt]
    runs-on: ubuntu-22.04
    # TODO: When migrating away from Cryptobox, use a regular Ubuntu machine with JDK 17 and caching
    container: wirebot/cryptobox:1.3.0
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build the CLI App
        env:
            GITHUB_USER: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :cli:compileKotlinJvm -Djava.library.path=$LD_LIBRARY_PATH

      - name: Build the samples
        env:
            GITHUB_USER: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            ./gradlew :samples:compileKotlinJvm

      - name: Build the testservice
        env:
            GITHUB_USER: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            ./gradlew :testservice:compileKotlin -Djava.library.path=$LD_LIBRARY_PATH
            ./gradlew :testservice:test

      - name: Verify DB Migrations
        run: |
            make db/verify-all-migrations

      - name: Test with Gradle
        run: |
          ./gradlew jvmTest koverXmlReport -Djava.library.path=$LD_LIBRARY_PATH
          ./gradlew jsTest

      - name: Archive Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
            name: test-reports
            path: ./**/build/reports/tests/**

      - name: Install Pip for test result publishing
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1.25
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml

      - name: Upload Test Report
        uses: codecov/codecov-action@v2
        with:
            files: "build/reports/kover/report.xml"

      - name: Archive Kover report
        uses: actions/upload-artifact@v3
        with:
            name: kover-report
            path: build/reports/kover/report.xml

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
