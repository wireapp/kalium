name: "iOS Tests"

on:
  pull_request:
    types: [ opened, synchronize ] # Don't rerun on `edited` to save time

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
    cancel-in-progress: true

jobs:
  gradle-run-tests:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Gradle Setup
        uses: gradle/gradle-build-action@v2
        with:
            cache-disabled: true

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build the samples
        env:
            GITHUB_USER: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            ./gradlew :samples:compileKotlinIosX64

      - name: iOS Tests
        run: ./gradlew iOSOnlyAffectedTest
        env:
            GITHUB_USER: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
            name: test-reports
            path: ./**/build/reports/tests/**

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1.25
        if: always()
        with:
          files: |
            **/build/test-results/testDebugUnitTest/**/*.xml
            **/build/test-results/**/*.xml

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
