name: "Android Unit Tests"

on:
  merge_group:
  pull_request:
    types: [ opened, synchronize ] # Don't rerun on `edited` to save time

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.merge_group.head_sha }}
  cancel-in-progress: true

jobs:
  detekt:
    uses: ./.github/workflows/codestyle.yml
  gradle-run-tests:
    needs: [ detekt ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java and Gradle
        uses: ./.github/actions/setup-java-gradle
        with:
          enable-kvm: true

      - name: Build the samples
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :samples:compileDebugSources

      - name: Android Unit Tests
        run: ./gradlew androidUnitOnlyAffectedTest
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: ./**/build/reports/tests/**

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            ./**/build/test-results/testDebugUnitTest/**/*.xml
            ./**/build/test-results/**/*.xml

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2.11.0
        if: always()
        with:
          files: |
            **/build/test-results/testDebugUnitTest/**/*.xml
            **/build/test-results/**/*.xml

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  upload-test-results-datadadog:
    runs-on: ubuntu-latest
    needs: gradle-run-tests
    if: always()

    steps:
      - name: Download tests results
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: test-results
          uses: actions/setup-node@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install datadog-ci
        run: npm install -g @datadog/datadog-ci
      - name: "Upload results"
        env:
          DATADOG_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_ENV: ci
          DATADOG_SITE: datadoghq.eu
        run: |
          find . -name "*.xml" -type f | sed 's/ /\\ /g' | tr '\n' ' ' | xargs -L 1 datadog-ci junit upload --service kalium-android-unit .
