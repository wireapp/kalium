/*
 * Wire
 * Copyright (C) 2021 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */

syntax = "proto2";

option java_package = "com.wire.kalium.protobuf.backup";

message BackupData {
    required BackupInfo info = 1;
    repeated ExportedConversation conversations = 2;
    repeated ExportedMessage messages = 3;
    repeated ExportUser users = 4;
}

message BackupInfo {
    required string platform = 1;
    required string version = 2;
    required ExportedQualifiedId userId = 3;
    required int64 creation_time = 4;
    required string clientId = 5;
}

message ExportUser {
    required ExportedQualifiedId id = 1;
    required string name = 2;
    required string handle = 3;
}

message ExportedQualifiedId {
    required string value = 1;
    required string domain = 2;
}

message ExportedConversation {
    required ExportedQualifiedId id = 1;
    required string name = 2;
}

message ExportedMessage {
    required string id = 1;
    required int64 time_iso = 2;
    required ExportedQualifiedId sender_user_id = 3;
    required string sender_client_id = 4;
    required ExportedQualifiedId conversation_id = 5;
    oneof content {
        ExportedText text = 6;
        ExportedAsset asset = 7;
        ExportedLocation location = 8;
    }
    optional int64 web_pk = 9; // WARNING: Only for development. Web-specific for assisting with debugging
}

message ExportedText {
    required string content = 1;
}

enum ExportedEncryptionAlgorithm {
    BACKUP_AES_CBC = 0;
    BACKUP_AES_GCM = 1;
}

message ExportedAsset {
    required string mimetype = 1;
    required int64 size = 2;
    optional string name = 3;
    required bytes otr_key = 4;
    required bytes sha256 = 5;
    required string asset_id = 6;
    optional string asset_token = 7;
    optional string asset_domain = 8;
    optional ExportedEncryptionAlgorithm encryption = 9;
    oneof meta_data {
        ExportedImageMetaData image = 10;
        ExportedVideoMetaData video = 11;
        ExportedAudioMetaData audio = 12;
        ExportedGenericMetaData generic = 13;
    }
}

 message ExportedImageMetaData {
    required int32 width = 1;
    required int32 height = 2;
    optional string tag = 3;
}

message ExportedVideoMetaData {
    optional int32 width = 1;
    optional int32 height = 2;
    optional uint64 duration_in_millis = 3;
}

message ExportedAudioMetaData {
    optional uint64 duration_in_millis = 1;
    optional bytes normalized_loudness = 2; // each byte represent one loudness value as a byte (char) value.
}

message ExportedGenericMetaData {
    optional string name = 1;
}

message ExportedLocation {
    required float longitude = 1;
    required float latitude = 2;
    optional string name = 3;
    optional int32 zoom = 4;
}
